{"ast":null,"code":"// // src/pages/Register.js\n// import React, { useState } from \"react\";\n// import { useNavigate, Link } from \"react-router-dom\";\n// import { registerUser, loginUser } from \"../services/authService\"; // ← importamos loginUser\n// import styled from \"styled-components\";\n// import { InputGroup, Form } from \"react-bootstrap\";\n\n// // Regex para validar contraseña\n// const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\W).{8,}$/;\n\n// const Container = styled.div`\n//   max-width: 400px;\n//   margin: 3rem auto;\n//   padding: 2rem;\n//   background: white;\n//   border-radius: 8px;\n//   box-shadow: 0 2px 8px rgba(0,0,0,0.1);\n// `;\n// const Title = styled.h2`\n//   text-align: center;\n//   margin-bottom: 1.5rem;\n// `;\n// const StyledForm = styled(Form)`\n//   display: flex;\n//   flex-direction: column;\n// `;\n// const Input = styled(Form.Control)`\n//   margin-bottom: 1rem;\n//   padding: 0.5rem;\n//   font-size: 1rem;\n// `;\n// const StyledSelect = styled(Form.Select)`\n//   margin-bottom: 1rem;\n//   padding: 0.5rem;\n//   font-size: 1rem;\n// `;\n// const StyledButton = styled.button`\n//   padding: 0.75rem;\n//   font-size: 1rem;\n//   background: #007bff;\n//   color: white;\n//   border: none;\n//   border-radius: 4px;\n//   cursor: pointer;\n//   &:hover { background: #0056b3; }\n// `;\n// const SuccessMessage = styled.div`\n//   margin-bottom: 1rem;\n//   padding: 0.75rem;\n//   text-align: center;\n//   color: #155724;\n//   background: #d4edda;\n//   border: 1px solid #c3e6cb;\n//   border-radius: 4px;\n// `;\n// const ErrorMessage = styled.div`\n//   margin-bottom: 1rem;\n//   padding: 0.75rem;\n//   text-align: center;\n//   color: #721c24;\n//   background: #f8d7da;\n//   border: 1px solid #f5c6cb;\n//   border-radius: 4px;\n// `;\n\n// const EyeToggle = styled(InputGroup.Text)`\n//   display: flex;\n//   align-items: center;\n//   justify-content: center;\n//   padding: 0.5rem;\n//   background: white;\n//   border-left: 0;\n//   border-top-right-radius: .25rem;\n//   border-bottom-right-radius: .25rem;\n//   cursor: pointer;\n// `;\n\n// const PasswordField = styled(Form.Control)`\n//   border-top-right-radius: 0;\n//   border-bottom-right-radius: 0;\n// `;\n\n// export default function Register() {\n//   const navigate = useNavigate();\n\n//   // datos del registro nuevo\n//   const [form, setForm] = useState({\n//     nombre: \"\",\n//     email: \"\",\n//     telefono: \"\",\n//     password: \"\",\n//     confirmPassword: \"\",\n//     red_social: \"\",\n//     rol: \"paciente\",\n//   });\n\n//   // credenciales del admin existente\n//   const [adminCreds, setAdminCreds] = useState({\n//     adminEmail: \"\",\n//     adminPassword: \"\"\n//   });\n\n//   const [success, setSuccess] = useState(\"\");\n//   const [error, setError] = useState(\"\");\n//   const [submitting, setSubmitting] = useState(false);\n//   const [showPassword, setShowPassword] = useState(false);\n//   const [showConfirm, setShowConfirm] = useState(false);\n\n//   const onChange = e => {\n//     const { name, value } = e.target;\n//     if (name === \"adminEmail\" || name === \"adminPassword\") {\n//       setAdminCreds(c => ({ ...c, [name]: value }));\n//     } else {\n//       setForm(f => ({ ...f, [name]: value }));\n//     }\n//     setError(\"\");\n//   };\n\n//   const onSubmit = async e => {\n//     e.preventDefault();\n//     setError(\"\");\n\n//     // 1) Validar contraseña\n//     if (!passwordRegex.test(form.password)) {\n//       setError(\"La contraseña debe tener mínimo 8 caracteres, al menos una mayúscula, una minúscula y un carácter especial.\");\n//       return;\n//     }\n//     if (form.password !== form.confirmPassword) {\n//       setError(\"La confirmación de contraseña no coincide.\");\n//       return;\n//     }\n\n//     setSubmitting(true);\n\n//     // 2) Si quieren crear un Admin, primero autenticamos al Admin existente\n//     if (form.rol === \"administrador\") {\n//       if (!adminCreds.adminEmail || !adminCreds.adminPassword) {\n//         setError(\"Debes ingresar email y contraseña de un Administrador existente.\");\n//         setSubmitting(false);\n//         return;\n//       }\n//       try {\n//         // loginUser lanza error si falla\n//         await loginUser({\n//           email: adminCreds.adminEmail,\n//           password: adminCreds.adminPassword\n//         });\n//       } catch (err) {\n//         setError(err.message || \"Autenticación de Admin fallida.\");\n//         setSubmitting(false);\n//         return;\n//       }\n//     }\n\n//     // 3) Ya validado (o rol != admin), procedemos a registrar\n//     try {\n//       await registerUser({\n//         nombre: form.nombre,\n//         email: form.email,\n//         telefono: form.telefono,\n//         password: form.password,\n//         red_social: form.red_social,\n//         rol: form.rol\n//       });\n\n//       setSuccess(\"Registro creado con éxito. En breve serás redirigido al inicio de sesión...\");\n//       setTimeout(() => navigate(\"/login\", { replace: true }), 3000);\n//     } catch (err) {\n//       setError(err.message || \"Ocurrió un error al registrar.\");\n//       setSubmitting(false);\n//     }\n//   };\n\n//   return (\n//     <Container>\n//       <Title>Registro de Usuario</Title>\n//       {error && <ErrorMessage>{error}</ErrorMessage>}\n//       {success && <SuccessMessage>{success}</SuccessMessage>}\n\n//       {!success && (\n//         <StyledForm onSubmit={onSubmit}>\n//           <Input\n//             name=\"nombre\"\n//             placeholder=\"Nombre completo\"\n//             value={form.nombre}\n//             onChange={onChange}\n//             disabled={submitting}\n//             required\n//           />\n//           <Input\n//             name=\"email\"\n//             type=\"email\"\n//             placeholder=\"Correo electrónico\"\n//             value={form.email}\n//             onChange={onChange}\n//             disabled={submitting}\n//             required\n//           />\n//           <Input\n//             name=\"telefono\"\n//             placeholder=\"Teléfono\"\n//             value={form.telefono}\n//             onChange={onChange}\n//             disabled={submitting}\n//             required\n//           />\n\n//           <InputGroup className=\"mb-3\">\n//             <PasswordField\n//               type={showPassword ? \"text\" : \"password\"}\n//               name=\"password\"\n//               placeholder=\"Contraseña\"\n//               value={form.password}\n//               onChange={onChange}\n//               disabled={submitting}\n//               required\n//             />\n//             <EyeToggle onClick={() => setShowPassword(v => !v)}>\n//               {showPassword ? \"🙈\" : \"👁️\"}\n//             </EyeToggle>\n//           </InputGroup>\n\n//           <InputGroup className=\"mb-3\">\n//             <PasswordField\n//               type={showConfirm ? \"text\" : \"password\"}\n//               name=\"confirmPassword\"\n//               placeholder=\"Confirmar contraseña\"\n//               value={form.confirmPassword}\n//               onChange={onChange}\n//               disabled={submitting}\n//               required\n//             />\n//             <EyeToggle onClick={() => setShowConfirm(v => !v)}>\n//               {showConfirm ? \"🙈\" : \"👁️\"}\n//             </EyeToggle>\n//           </InputGroup>\n\n//           <Input\n//             name=\"red_social\"\n//             placeholder=\"Red social (opcional)\"\n//             value={form.red_social}\n//             onChange={onChange}\n//             disabled={submitting}\n//           />\n\n//           <StyledSelect\n//             name=\"rol\"\n//             value={form.rol}\n//             onChange={onChange}\n//             disabled={submitting}\n//             required\n//           >\n//             <option value=\"paciente\">Paciente</option>\n//             <option value=\"medico\">Médico</option>\n//             <option value=\"administrador\">Administrador</option>\n//           </StyledSelect>\n\n//           {form.rol === \"administrador\" && (\n//             <>\n//               <hr />\n//               <Input\n//                 name=\"adminEmail\"\n//                 type=\"email\"\n//                 placeholder=\"Admin existente: Email\"\n//                 value={adminCreds.adminEmail}\n//                 onChange={onChange}\n//                 disabled={submitting}\n//                 required\n//               />\n//               <Input\n//                 name=\"adminPassword\"\n//                 type=\"password\"\n//                 placeholder=\"Admin existente: Contraseña\"\n//                 value={adminCreds.adminPassword}\n//                 onChange={onChange}\n//                 disabled={submitting}\n//                 required\n//               />\n//             </>\n//           )}\n\n//           <StyledButton type=\"submit\" disabled={submitting}>\n//             {submitting ? \"Procesando...\" : \"Registrarse\"}\n//           </StyledButton>\n//         </StyledForm>\n//       )}\n\n//       <p style={{ marginTop: '1rem', textAlign: 'center' }}>\n//         ¿Ya tienes una cuenta? <Link to=\"/login\">Inicia sesión aquí</Link>\n//       </p>\n//     </Container>\n//   );\n// }","map":{"version":3,"names":[],"sources":["C:/Users/dae01/Documents/Universidad/QuickCita/frontend/src/pages/Register.js"],"sourcesContent":["// // src/pages/Register.js\r\n// import React, { useState } from \"react\";\r\n// import { useNavigate, Link } from \"react-router-dom\";\r\n// import { registerUser, loginUser } from \"../services/authService\"; // ← importamos loginUser\r\n// import styled from \"styled-components\";\r\n// import { InputGroup, Form } from \"react-bootstrap\";\r\n\r\n// // Regex para validar contraseña\r\n// const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\W).{8,}$/;\r\n\r\n// const Container = styled.div`\r\n//   max-width: 400px;\r\n//   margin: 3rem auto;\r\n//   padding: 2rem;\r\n//   background: white;\r\n//   border-radius: 8px;\r\n//   box-shadow: 0 2px 8px rgba(0,0,0,0.1);\r\n// `;\r\n// const Title = styled.h2`\r\n//   text-align: center;\r\n//   margin-bottom: 1.5rem;\r\n// `;\r\n// const StyledForm = styled(Form)`\r\n//   display: flex;\r\n//   flex-direction: column;\r\n// `;\r\n// const Input = styled(Form.Control)`\r\n//   margin-bottom: 1rem;\r\n//   padding: 0.5rem;\r\n//   font-size: 1rem;\r\n// `;\r\n// const StyledSelect = styled(Form.Select)`\r\n//   margin-bottom: 1rem;\r\n//   padding: 0.5rem;\r\n//   font-size: 1rem;\r\n// `;\r\n// const StyledButton = styled.button`\r\n//   padding: 0.75rem;\r\n//   font-size: 1rem;\r\n//   background: #007bff;\r\n//   color: white;\r\n//   border: none;\r\n//   border-radius: 4px;\r\n//   cursor: pointer;\r\n//   &:hover { background: #0056b3; }\r\n// `;\r\n// const SuccessMessage = styled.div`\r\n//   margin-bottom: 1rem;\r\n//   padding: 0.75rem;\r\n//   text-align: center;\r\n//   color: #155724;\r\n//   background: #d4edda;\r\n//   border: 1px solid #c3e6cb;\r\n//   border-radius: 4px;\r\n// `;\r\n// const ErrorMessage = styled.div`\r\n//   margin-bottom: 1rem;\r\n//   padding: 0.75rem;\r\n//   text-align: center;\r\n//   color: #721c24;\r\n//   background: #f8d7da;\r\n//   border: 1px solid #f5c6cb;\r\n//   border-radius: 4px;\r\n// `;\r\n\r\n// const EyeToggle = styled(InputGroup.Text)`\r\n//   display: flex;\r\n//   align-items: center;\r\n//   justify-content: center;\r\n//   padding: 0.5rem;\r\n//   background: white;\r\n//   border-left: 0;\r\n//   border-top-right-radius: .25rem;\r\n//   border-bottom-right-radius: .25rem;\r\n//   cursor: pointer;\r\n// `;\r\n\r\n// const PasswordField = styled(Form.Control)`\r\n//   border-top-right-radius: 0;\r\n//   border-bottom-right-radius: 0;\r\n// `;\r\n\r\n// export default function Register() {\r\n//   const navigate = useNavigate();\r\n\r\n//   // datos del registro nuevo\r\n//   const [form, setForm] = useState({\r\n//     nombre: \"\",\r\n//     email: \"\",\r\n//     telefono: \"\",\r\n//     password: \"\",\r\n//     confirmPassword: \"\",\r\n//     red_social: \"\",\r\n//     rol: \"paciente\",\r\n//   });\r\n\r\n//   // credenciales del admin existente\r\n//   const [adminCreds, setAdminCreds] = useState({\r\n//     adminEmail: \"\",\r\n//     adminPassword: \"\"\r\n//   });\r\n\r\n//   const [success, setSuccess] = useState(\"\");\r\n//   const [error, setError] = useState(\"\");\r\n//   const [submitting, setSubmitting] = useState(false);\r\n//   const [showPassword, setShowPassword] = useState(false);\r\n//   const [showConfirm, setShowConfirm] = useState(false);\r\n\r\n//   const onChange = e => {\r\n//     const { name, value } = e.target;\r\n//     if (name === \"adminEmail\" || name === \"adminPassword\") {\r\n//       setAdminCreds(c => ({ ...c, [name]: value }));\r\n//     } else {\r\n//       setForm(f => ({ ...f, [name]: value }));\r\n//     }\r\n//     setError(\"\");\r\n//   };\r\n\r\n//   const onSubmit = async e => {\r\n//     e.preventDefault();\r\n//     setError(\"\");\r\n\r\n//     // 1) Validar contraseña\r\n//     if (!passwordRegex.test(form.password)) {\r\n//       setError(\"La contraseña debe tener mínimo 8 caracteres, al menos una mayúscula, una minúscula y un carácter especial.\");\r\n//       return;\r\n//     }\r\n//     if (form.password !== form.confirmPassword) {\r\n//       setError(\"La confirmación de contraseña no coincide.\");\r\n//       return;\r\n//     }\r\n\r\n//     setSubmitting(true);\r\n\r\n//     // 2) Si quieren crear un Admin, primero autenticamos al Admin existente\r\n//     if (form.rol === \"administrador\") {\r\n//       if (!adminCreds.adminEmail || !adminCreds.adminPassword) {\r\n//         setError(\"Debes ingresar email y contraseña de un Administrador existente.\");\r\n//         setSubmitting(false);\r\n//         return;\r\n//       }\r\n//       try {\r\n//         // loginUser lanza error si falla\r\n//         await loginUser({\r\n//           email: adminCreds.adminEmail,\r\n//           password: adminCreds.adminPassword\r\n//         });\r\n//       } catch (err) {\r\n//         setError(err.message || \"Autenticación de Admin fallida.\");\r\n//         setSubmitting(false);\r\n//         return;\r\n//       }\r\n//     }\r\n\r\n//     // 3) Ya validado (o rol != admin), procedemos a registrar\r\n//     try {\r\n//       await registerUser({\r\n//         nombre: form.nombre,\r\n//         email: form.email,\r\n//         telefono: form.telefono,\r\n//         password: form.password,\r\n//         red_social: form.red_social,\r\n//         rol: form.rol\r\n//       });\r\n\r\n//       setSuccess(\"Registro creado con éxito. En breve serás redirigido al inicio de sesión...\");\r\n//       setTimeout(() => navigate(\"/login\", { replace: true }), 3000);\r\n//     } catch (err) {\r\n//       setError(err.message || \"Ocurrió un error al registrar.\");\r\n//       setSubmitting(false);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <Container>\r\n//       <Title>Registro de Usuario</Title>\r\n//       {error && <ErrorMessage>{error}</ErrorMessage>}\r\n//       {success && <SuccessMessage>{success}</SuccessMessage>}\r\n\r\n//       {!success && (\r\n//         <StyledForm onSubmit={onSubmit}>\r\n//           <Input\r\n//             name=\"nombre\"\r\n//             placeholder=\"Nombre completo\"\r\n//             value={form.nombre}\r\n//             onChange={onChange}\r\n//             disabled={submitting}\r\n//             required\r\n//           />\r\n//           <Input\r\n//             name=\"email\"\r\n//             type=\"email\"\r\n//             placeholder=\"Correo electrónico\"\r\n//             value={form.email}\r\n//             onChange={onChange}\r\n//             disabled={submitting}\r\n//             required\r\n//           />\r\n//           <Input\r\n//             name=\"telefono\"\r\n//             placeholder=\"Teléfono\"\r\n//             value={form.telefono}\r\n//             onChange={onChange}\r\n//             disabled={submitting}\r\n//             required\r\n//           />\r\n\r\n//           <InputGroup className=\"mb-3\">\r\n//             <PasswordField\r\n//               type={showPassword ? \"text\" : \"password\"}\r\n//               name=\"password\"\r\n//               placeholder=\"Contraseña\"\r\n//               value={form.password}\r\n//               onChange={onChange}\r\n//               disabled={submitting}\r\n//               required\r\n//             />\r\n//             <EyeToggle onClick={() => setShowPassword(v => !v)}>\r\n//               {showPassword ? \"🙈\" : \"👁️\"}\r\n//             </EyeToggle>\r\n//           </InputGroup>\r\n\r\n//           <InputGroup className=\"mb-3\">\r\n//             <PasswordField\r\n//               type={showConfirm ? \"text\" : \"password\"}\r\n//               name=\"confirmPassword\"\r\n//               placeholder=\"Confirmar contraseña\"\r\n//               value={form.confirmPassword}\r\n//               onChange={onChange}\r\n//               disabled={submitting}\r\n//               required\r\n//             />\r\n//             <EyeToggle onClick={() => setShowConfirm(v => !v)}>\r\n//               {showConfirm ? \"🙈\" : \"👁️\"}\r\n//             </EyeToggle>\r\n//           </InputGroup>\r\n\r\n//           <Input\r\n//             name=\"red_social\"\r\n//             placeholder=\"Red social (opcional)\"\r\n//             value={form.red_social}\r\n//             onChange={onChange}\r\n//             disabled={submitting}\r\n//           />\r\n\r\n//           <StyledSelect\r\n//             name=\"rol\"\r\n//             value={form.rol}\r\n//             onChange={onChange}\r\n//             disabled={submitting}\r\n//             required\r\n//           >\r\n//             <option value=\"paciente\">Paciente</option>\r\n//             <option value=\"medico\">Médico</option>\r\n//             <option value=\"administrador\">Administrador</option>\r\n//           </StyledSelect>\r\n\r\n//           {form.rol === \"administrador\" && (\r\n//             <>\r\n//               <hr />\r\n//               <Input\r\n//                 name=\"adminEmail\"\r\n//                 type=\"email\"\r\n//                 placeholder=\"Admin existente: Email\"\r\n//                 value={adminCreds.adminEmail}\r\n//                 onChange={onChange}\r\n//                 disabled={submitting}\r\n//                 required\r\n//               />\r\n//               <Input\r\n//                 name=\"adminPassword\"\r\n//                 type=\"password\"\r\n//                 placeholder=\"Admin existente: Contraseña\"\r\n//                 value={adminCreds.adminPassword}\r\n//                 onChange={onChange}\r\n//                 disabled={submitting}\r\n//                 required\r\n//               />\r\n//             </>\r\n//           )}\r\n\r\n//           <StyledButton type=\"submit\" disabled={submitting}>\r\n//             {submitting ? \"Procesando...\" : \"Registrarse\"}\r\n//           </StyledButton>\r\n//         </StyledForm>\r\n//       )}\r\n\r\n//       <p style={{ marginTop: '1rem', textAlign: 'center' }}>\r\n//         ¿Ya tienes una cuenta? <Link to=\"/login\">Inicia sesión aquí</Link>\r\n//       </p>\r\n//     </Container>\r\n//   );\r\n// }\r\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
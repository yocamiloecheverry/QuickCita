{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dae01\\\\Documents\\\\Universidad\\\\QuickCita\\\\frontend\\\\src\\\\pages\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext, useEffect } from \"react\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport { searchDoctors } from \"../services/doctorService\";\nimport { createAppointment, getAvailableSlots } from \"../services/appointmentService\";\nimport { getPerfilFilters } from \"../services/filterService\";\nimport AppNavbar from \"../components/Navbar\";\nimport Footer from \"../components/Footer\";\nimport CustomAlert from \"../components/CustomAlert\";\nimport CustomModal from \"../components/CustomModal\";\nimport \"../App.css\";\nimport { Container, Form, Row, Col, Card, Button, Spinner, Modal } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Dashboard() {\n  _s();\n  const {\n    user\n  } = useContext(AuthContext);\n\n  // Filtros seleccionados\n  const [filters, setFilters] = useState({\n    especialidad: \"\",\n    ubicacion: \"\",\n    seguro_medico: \"\"\n  });\n\n  // Listas dinámicas de filtros\n  const [especialidades, setEspecialidades] = useState([]);\n  const [ubicaciones, setUbicaciones] = useState([]);\n  const [seguros, setSeguros] = useState([]);\n\n  // Resultados de búsqueda\n  const [doctors, setDoctors] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  // Slots disponibles por médico\n  const [slotsByDoctor, setSlotsByDoctor] = useState({});\n\n  // Modal de agendamiento\n  const [showModal, setShowModal] = useState(false);\n  const [selectedDoctor, setSelectedDoctor] = useState(null);\n  const [fechaHora, setFechaHora] = useState(\"\");\n  const [notiMethod, setNotiMethod] = useState(\"email\");\n\n  // Estados para alertas y modales personalizados\n  const [alert, setAlert] = useState({\n    show: false,\n    message: \"\",\n    variant: \"info\"\n  });\n  const [modal, setModal] = useState({\n    show: false,\n    title: \"\",\n    body: \"\",\n    onConfirm: null\n  });\n\n  // Funciones para manejar alertas y modales\n  const showAlert = (message, variant = \"info\") => {\n    setAlert({\n      show: true,\n      message,\n      variant\n    });\n    setTimeout(() => setAlert({\n      show: false,\n      message: \"\",\n      variant: \"info\"\n    }), 4000);\n  };\n  const showConfirmModal = ({\n    title,\n    body,\n    onConfirm\n  }) => {\n    setModal({\n      show: true,\n      title,\n      body,\n      onConfirm\n    });\n  };\n  const handleModalConfirm = () => {\n    if (modal.onConfirm) modal.onConfirm();\n    setModal({\n      show: false,\n      title: \"\",\n      body: \"\",\n      onConfirm: null\n    });\n  };\n  const handleModalCancel = () => {\n    setModal({\n      show: false,\n      title: \"\",\n      body: \"\",\n      onConfirm: null\n    });\n  };\n\n  // Cargar valores de filtros desde el backend\n  useEffect(() => {\n    getPerfilFilters().then(({\n      especialidades: esp,\n      ubicaciones: ubi,\n      seguros: seg\n    }) => {\n      setEspecialidades(esp);\n      setUbicaciones(ubi);\n      setSeguros(seg);\n    }).catch(err => {\n      console.error(\"Error cargando filtros:\", err);\n      showAlert(\"Error al cargar los filtros de búsqueda\", \"danger\");\n    });\n  }, []);\n  const handleFilterChange = e => {\n    setFilters(f => ({\n      ...f,\n      [e.target.name]: e.target.value\n    }));\n  };\n  const handleSearch = async e => {\n    e.preventDefault();\n    setLoading(true);\n    try {\n      const docs = await searchDoctors(filters);\n      setDoctors(docs);\n      if (docs.length === 0) {\n        showAlert(\"No se encontraron médicos con los filtros seleccionados\", \"warning\");\n        setSlotsByDoctor({});\n        return;\n      }\n\n      // cargar slots para cada doctor\n      const slotsMap = {};\n      await Promise.all(docs.map(async doc => {\n        const slots = await getAvailableSlots(doc.id_usuario);\n        slotsMap[doc.id_usuario] = slots;\n      }));\n      setSlotsByDoctor(slotsMap);\n      showAlert(`Se encontraron ${docs.length} médicos disponibles`, \"success\");\n    } catch (err) {\n      console.error(\"Error buscando médicos:\", err);\n      showAlert(err.message || \"Error al buscar médicos\", \"danger\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  const openModal = (doctor, slot) => {\n    setSelectedDoctor(doctor);\n    setFechaHora(slot);\n    setShowModal(true);\n  };\n  const handleAppointment = async () => {\n    if (!fechaHora) {\n      showAlert(\"Por favor selecciona fecha y hora\", \"warning\");\n      return;\n    }\n\n    // Mostrar modal de confirmación\n    showConfirmModal({\n      title: \"Confirmar cita médica\",\n      body: `¿Estás seguro de que deseas agendar una cita con Dr(a). ${selectedDoctor === null || selectedDoctor === void 0 ? void 0 : selectedDoctor.nombre} para el ${new Date(fechaHora).toLocaleString()}?`,\n      onConfirm: () => confirmAppointment()\n    });\n  };\n  const confirmAppointment = async () => {\n    try {\n      var _selectedDoctor$Perfi;\n      await createAppointment({\n        id_paciente: user.id_usuario,\n        id_medico: selectedDoctor.id_usuario,\n        fecha_hora: fechaHora,\n        metodo_notificacion: notiMethod,\n        seguro_medico: ((_selectedDoctor$Perfi = selectedDoctor.PerfilMedico) === null || _selectedDoctor$Perfi === void 0 ? void 0 : _selectedDoctor$Perfi.seguro_medico) || \"\"\n      });\n      showAlert(\"¡Cita agendada exitosamente! Recibirás una notificación de confirmación.\", \"success\");\n      setShowModal(false);\n\n      // Actualizar slots disponibles para ese médico\n      const updatedSlots = await getAvailableSlots(selectedDoctor.id_usuario);\n      setSlotsByDoctor(prev => ({\n        ...prev,\n        [selectedDoctor.id_usuario]: updatedSlots\n      }));\n    } catch (err) {\n      console.error(\"Error agendando cita:\", err);\n      showAlert(err.message || \"Error al agendar la cita. Intenta nuevamente.\", \"danger\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CustomAlert, {\n      show: alert.show,\n      message: alert.message,\n      variant: alert.variant,\n      onClose: () => setAlert({\n        show: false,\n        message: \"\",\n        variant: \"info\"\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CustomModal, {\n      show: modal.show,\n      title: modal.title,\n      body: modal.body,\n      onConfirm: handleModalConfirm,\n      onCancel: handleModalCancel\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-layout\",\n      children: [/*#__PURE__*/_jsxDEV(AppNavbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app-content\",\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          className: \"py-5 d-flex flex-column\",\n          children: [/*#__PURE__*/_jsxDEV(Form, {\n            onSubmit: handleSearch,\n            children: /*#__PURE__*/_jsxDEV(Row, {\n              className: \"g-3\",\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                md: true,\n                children: /*#__PURE__*/_jsxDEV(Form.Select, {\n                  name: \"especialidad\",\n                  value: filters.especialidad,\n                  onChange: handleFilterChange,\n                  className: \"stylish-select\",\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: \"-- Especialidad --\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 225,\n                    columnNumber: 21\n                  }, this), especialidades.map(sp => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: sp,\n                    children: sp\n                  }, sp, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 227,\n                    columnNumber: 23\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 219,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                md: true,\n                children: /*#__PURE__*/_jsxDEV(Form.Select, {\n                  name: \"ubicacion\",\n                  value: filters.ubicacion,\n                  onChange: handleFilterChange,\n                  className: \"stylish-select\",\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: \"-- Ubicaci\\xF3n --\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 242,\n                    columnNumber: 21\n                  }, this), ubicaciones.map(loc => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: loc,\n                    children: loc\n                  }, loc, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 244,\n                    columnNumber: 23\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 236,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                md: true,\n                children: /*#__PURE__*/_jsxDEV(Form.Select, {\n                  name: \"seguro_medico\",\n                  value: filters.seguro_medico,\n                  onChange: handleFilterChange,\n                  className: \"stylish-select\",\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: \"-- Seguro m\\xE9dico --\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 259,\n                    columnNumber: 21\n                  }, this), seguros.map(sg => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: sg,\n                    children: sg\n                  }, sg, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 261,\n                    columnNumber: 23\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 253,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                md: \"auto\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  type: \"submit\",\n                  disabled: loading,\n                  children: loading ? /*#__PURE__*/_jsxDEV(Spinner, {\n                    animation: \"border\",\n                    size: \"sm\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 271,\n                    columnNumber: 23\n                  }, this) : \"Buscar\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 269,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            className: \"mt-4 g-3\",\n            children: doctors.map(doc => {\n              var _doc$PerfilMedico, _doc$PerfilMedico2, _slotsByDoctor$doc$id;\n              return /*#__PURE__*/_jsxDEV(Col, {\n                xs: 12,\n                md: 6,\n                lg: 4,\n                children: /*#__PURE__*/_jsxDEV(Card, {\n                  className: \"h-100\",\n                  children: /*#__PURE__*/_jsxDEV(Card.Body, {\n                    children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                      children: doc.nombre\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 285,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                        children: \"Especialidad:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 287,\n                        columnNumber: 25\n                      }, this), \" \", (_doc$PerfilMedico = doc.PerfilMedico) === null || _doc$PerfilMedico === void 0 ? void 0 : _doc$PerfilMedico.especialidad, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 289,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                        children: \"Ubicaci\\xF3n:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 290,\n                        columnNumber: 25\n                      }, this), \" \", (_doc$PerfilMedico2 = doc.PerfilMedico) === null || _doc$PerfilMedico2 === void 0 ? void 0 : _doc$PerfilMedico2.ubicacion]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 286,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        maxHeight: 120,\n                        overflowY: \"auto\"\n                      },\n                      children: ((_slotsByDoctor$doc$id = slotsByDoctor[doc.id_usuario]) === null || _slotsByDoctor$doc$id === void 0 ? void 0 : _slotsByDoctor$doc$id.length) > 0 ? slotsByDoctor[doc.id_usuario].map(slot => /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"d-flex justify-content-between align-items-center mb-1\",\n                        children: [/*#__PURE__*/_jsxDEV(\"small\", {\n                          children: new Date(slot).toLocaleString()\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 302,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(Button, {\n                          size: \"sm\",\n                          onClick: () => openModal(doc, slot),\n                          children: \"Reservar\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 303,\n                          columnNumber: 31\n                        }, this)]\n                      }, slot, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 298,\n                        columnNumber: 29\n                      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"text-muted\",\n                        children: \"No hay horarios disponibles\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 312,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 295,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 284,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 283,\n                  columnNumber: 19\n                }, this)\n              }, doc.id_usuario, false, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 17\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Modal, {\n            show: showModal,\n            onHide: () => setShowModal(false),\n            children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n              closeButton: true,\n              children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n                children: [\"Agendar con \", selectedDoctor === null || selectedDoctor === void 0 ? void 0 : selectedDoctor.nombre]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 326,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Fecha y hora\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 330,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  readOnly: true,\n                  value: new Date(fechaHora).toLocaleString()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 331,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 329,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"M\\xE9todo de notificaci\\xF3n\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 338,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n                  value: notiMethod,\n                  onChange: e => setNotiMethod(e.target.value),\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"email\",\n                    children: \"Email\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 343,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"sms\",\n                    children: \"SMS\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 344,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"ambos\",\n                    children: \"Email y SMS\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 345,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 339,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 337,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                variant: \"secondary\",\n                onClick: () => setShowModal(false),\n                children: \"Cancelar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 350,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"primary\",\n                onClick: handleAppointment,\n                children: \"Confirmar Cita\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 353,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Dashboard, \"3NsYgCTqeZ9EFNx0qfd0BLH65cY=\");\n_c = Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useContext","useEffect","AuthContext","searchDoctors","createAppointment","getAvailableSlots","getPerfilFilters","AppNavbar","Footer","CustomAlert","CustomModal","Container","Form","Row","Col","Card","Button","Spinner","Modal","jsxDEV","_jsxDEV","Fragment","_Fragment","Dashboard","_s","user","filters","setFilters","especialidad","ubicacion","seguro_medico","especialidades","setEspecialidades","ubicaciones","setUbicaciones","seguros","setSeguros","doctors","setDoctors","loading","setLoading","slotsByDoctor","setSlotsByDoctor","showModal","setShowModal","selectedDoctor","setSelectedDoctor","fechaHora","setFechaHora","notiMethod","setNotiMethod","alert","setAlert","show","message","variant","modal","setModal","title","body","onConfirm","showAlert","setTimeout","showConfirmModal","handleModalConfirm","handleModalCancel","then","esp","ubi","seg","catch","err","console","error","handleFilterChange","e","f","target","name","value","handleSearch","preventDefault","docs","length","slotsMap","Promise","all","map","doc","slots","id_usuario","openModal","doctor","slot","handleAppointment","nombre","Date","toLocaleString","confirmAppointment","_selectedDoctor$Perfi","id_paciente","id_medico","fecha_hora","metodo_notificacion","PerfilMedico","updatedSlots","prev","children","onClose","fileName","_jsxFileName","lineNumber","columnNumber","onCancel","className","onSubmit","md","Select","onChange","sp","loc","sg","type","disabled","animation","size","_doc$PerfilMedico","_doc$PerfilMedico2","_slotsByDoctor$doc$id","xs","lg","Body","Title","Text","style","maxHeight","overflowY","onClick","onHide","Header","closeButton","Group","Label","Control","readOnly","_c","$RefreshReg$"],"sources":["C:/Users/dae01/Documents/Universidad/QuickCita/frontend/src/pages/Dashboard.js"],"sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\nimport { searchDoctors } from \"../services/doctorService\";\r\nimport {\r\n  createAppointment,\r\n  getAvailableSlots,\r\n} from \"../services/appointmentService\";\r\nimport { getPerfilFilters } from \"../services/filterService\";\r\nimport AppNavbar from \"../components/Navbar\";\r\nimport Footer from \"../components/Footer\";\r\nimport CustomAlert from \"../components/CustomAlert\";\r\nimport CustomModal from \"../components/CustomModal\";\r\nimport \"../App.css\";\r\nimport {\r\n  Container,\r\n  Form,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Button,\r\n  Spinner,\r\n  Modal,\r\n} from \"react-bootstrap\";\r\n\r\nexport default function Dashboard() {\r\n  const { user } = useContext(AuthContext);\r\n\r\n  // Filtros seleccionados\r\n  const [filters, setFilters] = useState({\r\n    especialidad: \"\",\r\n    ubicacion: \"\",\r\n    seguro_medico: \"\",\r\n  });\r\n\r\n  // Listas dinámicas de filtros\r\n  const [especialidades, setEspecialidades] = useState([]);\r\n  const [ubicaciones, setUbicaciones] = useState([]);\r\n  const [seguros, setSeguros] = useState([]);\r\n\r\n  // Resultados de búsqueda\r\n  const [doctors, setDoctors] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // Slots disponibles por médico\r\n  const [slotsByDoctor, setSlotsByDoctor] = useState({});\r\n\r\n  // Modal de agendamiento\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [selectedDoctor, setSelectedDoctor] = useState(null);\r\n  const [fechaHora, setFechaHora] = useState(\"\");\r\n  const [notiMethod, setNotiMethod] = useState(\"email\");\r\n\r\n  // Estados para alertas y modales personalizados\r\n  const [alert, setAlert] = useState({\r\n    show: false,\r\n    message: \"\",\r\n    variant: \"info\",\r\n  });\r\n  const [modal, setModal] = useState({\r\n    show: false,\r\n    title: \"\",\r\n    body: \"\",\r\n    onConfirm: null,\r\n  });\r\n\r\n  // Funciones para manejar alertas y modales\r\n  const showAlert = (message, variant = \"info\") => {\r\n    setAlert({ show: true, message, variant });\r\n    setTimeout(\r\n      () => setAlert({ show: false, message: \"\", variant: \"info\" }),\r\n      4000\r\n    );\r\n  };\r\n\r\n  const showConfirmModal = ({ title, body, onConfirm }) => {\r\n    setModal({ show: true, title, body, onConfirm });\r\n  };\r\n\r\n  const handleModalConfirm = () => {\r\n    if (modal.onConfirm) modal.onConfirm();\r\n    setModal({ show: false, title: \"\", body: \"\", onConfirm: null });\r\n  };\r\n\r\n  const handleModalCancel = () => {\r\n    setModal({ show: false, title: \"\", body: \"\", onConfirm: null });\r\n  };\r\n\r\n  // Cargar valores de filtros desde el backend\r\n  useEffect(() => {\r\n    getPerfilFilters()\r\n      .then(({ especialidades: esp, ubicaciones: ubi, seguros: seg }) => {\r\n        setEspecialidades(esp);\r\n        setUbicaciones(ubi);\r\n        setSeguros(seg);\r\n      })\r\n      .catch((err) => {\r\n        console.error(\"Error cargando filtros:\", err);\r\n        showAlert(\"Error al cargar los filtros de búsqueda\", \"danger\");\r\n      });\r\n  }, []);\r\n\r\n  const handleFilterChange = (e) => {\r\n    setFilters((f) => ({ ...f, [e.target.name]: e.target.value }));\r\n  };\r\n\r\n  const handleSearch = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    try {\r\n      const docs = await searchDoctors(filters);\r\n      setDoctors(docs);\r\n\r\n      if (docs.length === 0) {\r\n        showAlert(\r\n          \"No se encontraron médicos con los filtros seleccionados\",\r\n          \"warning\"\r\n        );\r\n        setSlotsByDoctor({});\r\n        return;\r\n      }\r\n\r\n      // cargar slots para cada doctor\r\n      const slotsMap = {};\r\n      await Promise.all(\r\n        docs.map(async (doc) => {\r\n          const slots = await getAvailableSlots(doc.id_usuario);\r\n          slotsMap[doc.id_usuario] = slots;\r\n        })\r\n      );\r\n      setSlotsByDoctor(slotsMap);\r\n      showAlert(`Se encontraron ${docs.length} médicos disponibles`, \"success\");\r\n    } catch (err) {\r\n      console.error(\"Error buscando médicos:\", err);\r\n      showAlert(err.message || \"Error al buscar médicos\", \"danger\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const openModal = (doctor, slot) => {\r\n    setSelectedDoctor(doctor);\r\n    setFechaHora(slot);\r\n    setShowModal(true);\r\n  };\r\n\r\n  const handleAppointment = async () => {\r\n    if (!fechaHora) {\r\n      showAlert(\"Por favor selecciona fecha y hora\", \"warning\");\r\n      return;\r\n    }\r\n\r\n    // Mostrar modal de confirmación\r\n    showConfirmModal({\r\n      title: \"Confirmar cita médica\",\r\n      body: `¿Estás seguro de que deseas agendar una cita con Dr(a). ${\r\n        selectedDoctor?.nombre\r\n      } para el ${new Date(fechaHora).toLocaleString()}?`,\r\n      onConfirm: () => confirmAppointment(),\r\n    });\r\n  };\r\n\r\n  const confirmAppointment = async () => {\r\n    try {\r\n      await createAppointment({\r\n        id_paciente: user.id_usuario,\r\n        id_medico: selectedDoctor.id_usuario,\r\n        fecha_hora: fechaHora,\r\n        metodo_notificacion: notiMethod,\r\n        seguro_medico: selectedDoctor.PerfilMedico?.seguro_medico || \"\",\r\n      });\r\n      showAlert(\r\n        \"¡Cita agendada exitosamente! Recibirás una notificación de confirmación.\",\r\n        \"success\"\r\n      );\r\n      setShowModal(false);\r\n\r\n      // Actualizar slots disponibles para ese médico\r\n      const updatedSlots = await getAvailableSlots(selectedDoctor.id_usuario);\r\n      setSlotsByDoctor((prev) => ({\r\n        ...prev,\r\n        [selectedDoctor.id_usuario]: updatedSlots,\r\n      }));\r\n    } catch (err) {\r\n      console.error(\"Error agendando cita:\", err);\r\n      showAlert(\r\n        err.message || \"Error al agendar la cita. Intenta nuevamente.\",\r\n        \"danger\"\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* Alertas personalizadas */}\r\n      <CustomAlert\r\n        show={alert.show}\r\n        message={alert.message}\r\n        variant={alert.variant}\r\n        onClose={() => setAlert({ show: false, message: \"\", variant: \"info\" })}\r\n      />\r\n\r\n      {/* Modal personalizado */}\r\n      <CustomModal\r\n        show={modal.show}\r\n        title={modal.title}\r\n        body={modal.body}\r\n        onConfirm={handleModalConfirm}\r\n        onCancel={handleModalCancel}\r\n      />\r\n\r\n      <div className=\"app-layout\">\r\n        <AppNavbar />\r\n        <div className=\"app-content\">\r\n          <Container className=\"py-5 d-flex flex-column\">\r\n            <Form onSubmit={handleSearch}>\r\n              <Row className=\"g-3\">\r\n                {/* Especialidad */}\r\n                <Col md>\r\n                  <Form.Select\r\n                    name=\"especialidad\"\r\n                    value={filters.especialidad}\r\n                    onChange={handleFilterChange}\r\n                    className=\"stylish-select\"\r\n                  >\r\n                    <option value=\"\">-- Especialidad --</option>\r\n                    {especialidades.map((sp) => (\r\n                      <option key={sp} value={sp}>\r\n                        {sp}\r\n                      </option>\r\n                    ))}\r\n                  </Form.Select>\r\n                </Col>\r\n\r\n                {/* Ubicación */}\r\n                <Col md>\r\n                  <Form.Select\r\n                    name=\"ubicacion\"\r\n                    value={filters.ubicacion}\r\n                    onChange={handleFilterChange}\r\n                    className=\"stylish-select\"\r\n                  >\r\n                    <option value=\"\">-- Ubicación --</option>\r\n                    {ubicaciones.map((loc) => (\r\n                      <option key={loc} value={loc}>\r\n                        {loc}\r\n                      </option>\r\n                    ))}\r\n                  </Form.Select>\r\n                </Col>\r\n\r\n                {/* Seguro médico */}\r\n                <Col md>\r\n                  <Form.Select\r\n                    name=\"seguro_medico\"\r\n                    value={filters.seguro_medico}\r\n                    onChange={handleFilterChange}\r\n                    className=\"stylish-select\"\r\n                  >\r\n                    <option value=\"\">-- Seguro médico --</option>\r\n                    {seguros.map((sg) => (\r\n                      <option key={sg} value={sg}>\r\n                        {sg}\r\n                      </option>\r\n                    ))}\r\n                  </Form.Select>\r\n                </Col>\r\n\r\n                <Col md=\"auto\">\r\n                  <Button type=\"submit\" disabled={loading}>\r\n                    {loading ? (\r\n                      <Spinner animation=\"border\" size=\"sm\" />\r\n                    ) : (\r\n                      \"Buscar\"\r\n                    )}\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n            </Form>\r\n\r\n            <Row className=\"mt-4 g-3\">\r\n              {doctors.map((doc) => (\r\n                <Col key={doc.id_usuario} xs={12} md={6} lg={4}>\r\n                  <Card className=\"h-100\">\r\n                    <Card.Body>\r\n                      <Card.Title>{doc.nombre}</Card.Title>\r\n                      <Card.Text>\r\n                        <strong>Especialidad:</strong>{\" \"}\r\n                        {doc.PerfilMedico?.especialidad}\r\n                        <br />\r\n                        <strong>Ubicación:</strong>{\" \"}\r\n                        {doc.PerfilMedico?.ubicacion}\r\n                      </Card.Text>\r\n\r\n                      {/* slots disponibles */}\r\n                      <div style={{ maxHeight: 120, overflowY: \"auto\" }}>\r\n                        {slotsByDoctor[doc.id_usuario]?.length > 0 ? (\r\n                          slotsByDoctor[doc.id_usuario].map((slot) => (\r\n                            <div\r\n                              key={slot}\r\n                              className=\"d-flex justify-content-between align-items-center mb-1\"\r\n                            >\r\n                              <small>{new Date(slot).toLocaleString()}</small>\r\n                              <Button\r\n                                size=\"sm\"\r\n                                onClick={() => openModal(doc, slot)}\r\n                              >\r\n                                Reservar\r\n                              </Button>\r\n                            </div>\r\n                          ))\r\n                        ) : (\r\n                          <p className=\"text-muted\">\r\n                            No hay horarios disponibles\r\n                          </p>\r\n                        )}\r\n                      </div>\r\n                    </Card.Body>\r\n                  </Card>\r\n                </Col>\r\n              ))}\r\n            </Row>\r\n\r\n            {/* Modal de agendamiento */}\r\n            <Modal show={showModal} onHide={() => setShowModal(false)}>\r\n              <Modal.Header closeButton>\r\n                <Modal.Title>Agendar con {selectedDoctor?.nombre}</Modal.Title>\r\n              </Modal.Header>\r\n              <Modal.Body>\r\n                <Form.Group className=\"mb-3\">\r\n                  <Form.Label>Fecha y hora</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    readOnly\r\n                    value={new Date(fechaHora).toLocaleString()}\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3\">\r\n                  <Form.Label>Método de notificación</Form.Label>\r\n                  <Form.Select\r\n                    value={notiMethod}\r\n                    onChange={(e) => setNotiMethod(e.target.value)}\r\n                  >\r\n                    <option value=\"email\">Email</option>\r\n                    <option value=\"sms\">SMS</option>\r\n                    <option value=\"ambos\">Email y SMS</option>\r\n                  </Form.Select>\r\n                </Form.Group>\r\n              </Modal.Body>\r\n              <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={() => setShowModal(false)}>\r\n                  Cancelar\r\n                </Button>\r\n                <Button variant=\"primary\" onClick={handleAppointment}>\r\n                  Confirmar Cita\r\n                </Button>\r\n              </Modal.Footer>\r\n            </Modal>\r\n          </Container>\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AAC9D,SAASC,WAAW,QAAQ,wBAAwB;AACpD,SAASC,aAAa,QAAQ,2BAA2B;AACzD,SACEC,iBAAiB,EACjBC,iBAAiB,QACZ,gCAAgC;AACvC,SAASC,gBAAgB,QAAQ,2BAA2B;AAC5D,OAAOC,SAAS,MAAM,sBAAsB;AAC5C,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAO,YAAY;AACnB,SACEC,SAAS,EACTC,IAAI,EACJC,GAAG,EACHC,GAAG,EACHC,IAAI,EACJC,MAAM,EACNC,OAAO,EACPC,KAAK,QACA,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEzB,eAAe,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAClC,MAAM;IAAEC;EAAK,CAAC,GAAGzB,UAAU,CAACE,WAAW,CAAC;;EAExC;EACA,MAAM,CAACwB,OAAO,EAAEC,UAAU,CAAC,GAAG5B,QAAQ,CAAC;IACrC6B,YAAY,EAAE,EAAE;IAChBC,SAAS,EAAE,EAAE;IACbC,aAAa,EAAE;EACjB,CAAC,CAAC;;EAEF;EACA,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGjC,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACkC,WAAW,EAAEC,cAAc,CAAC,GAAGnC,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACoC,OAAO,EAAEC,UAAU,CAAC,GAAGrC,QAAQ,CAAC,EAAE,CAAC;;EAE1C;EACA,MAAM,CAACsC,OAAO,EAAEC,UAAU,CAAC,GAAGvC,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACwC,OAAO,EAAEC,UAAU,CAAC,GAAGzC,QAAQ,CAAC,KAAK,CAAC;;EAE7C;EACA,MAAM,CAAC0C,aAAa,EAAEC,gBAAgB,CAAC,GAAG3C,QAAQ,CAAC,CAAC,CAAC,CAAC;;EAEtD;EACA,MAAM,CAAC4C,SAAS,EAAEC,YAAY,CAAC,GAAG7C,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAAC8C,cAAc,EAAEC,iBAAiB,CAAC,GAAG/C,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAACgD,SAAS,EAAEC,YAAY,CAAC,GAAGjD,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACkD,UAAU,EAAEC,aAAa,CAAC,GAAGnD,QAAQ,CAAC,OAAO,CAAC;;EAErD;EACA,MAAM,CAACoD,KAAK,EAAEC,QAAQ,CAAC,GAAGrD,QAAQ,CAAC;IACjCsD,IAAI,EAAE,KAAK;IACXC,OAAO,EAAE,EAAE;IACXC,OAAO,EAAE;EACX,CAAC,CAAC;EACF,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAG1D,QAAQ,CAAC;IACjCsD,IAAI,EAAE,KAAK;IACXK,KAAK,EAAE,EAAE;IACTC,IAAI,EAAE,EAAE;IACRC,SAAS,EAAE;EACb,CAAC,CAAC;;EAEF;EACA,MAAMC,SAAS,GAAGA,CAACP,OAAO,EAAEC,OAAO,GAAG,MAAM,KAAK;IAC/CH,QAAQ,CAAC;MAAEC,IAAI,EAAE,IAAI;MAAEC,OAAO;MAAEC;IAAQ,CAAC,CAAC;IAC1CO,UAAU,CACR,MAAMV,QAAQ,CAAC;MAAEC,IAAI,EAAE,KAAK;MAAEC,OAAO,EAAE,EAAE;MAAEC,OAAO,EAAE;IAAO,CAAC,CAAC,EAC7D,IACF,CAAC;EACH,CAAC;EAED,MAAMQ,gBAAgB,GAAGA,CAAC;IAAEL,KAAK;IAAEC,IAAI;IAAEC;EAAU,CAAC,KAAK;IACvDH,QAAQ,CAAC;MAAEJ,IAAI,EAAE,IAAI;MAAEK,KAAK;MAAEC,IAAI;MAAEC;IAAU,CAAC,CAAC;EAClD,CAAC;EAED,MAAMI,kBAAkB,GAAGA,CAAA,KAAM;IAC/B,IAAIR,KAAK,CAACI,SAAS,EAAEJ,KAAK,CAACI,SAAS,CAAC,CAAC;IACtCH,QAAQ,CAAC;MAAEJ,IAAI,EAAE,KAAK;MAAEK,KAAK,EAAE,EAAE;MAAEC,IAAI,EAAE,EAAE;MAAEC,SAAS,EAAE;IAAK,CAAC,CAAC;EACjE,CAAC;EAED,MAAMK,iBAAiB,GAAGA,CAAA,KAAM;IAC9BR,QAAQ,CAAC;MAAEJ,IAAI,EAAE,KAAK;MAAEK,KAAK,EAAE,EAAE;MAAEC,IAAI,EAAE,EAAE;MAAEC,SAAS,EAAE;IAAK,CAAC,CAAC;EACjE,CAAC;;EAED;EACA3D,SAAS,CAAC,MAAM;IACdK,gBAAgB,CAAC,CAAC,CACf4D,IAAI,CAAC,CAAC;MAAEnC,cAAc,EAAEoC,GAAG;MAAElC,WAAW,EAAEmC,GAAG;MAAEjC,OAAO,EAAEkC;IAAI,CAAC,KAAK;MACjErC,iBAAiB,CAACmC,GAAG,CAAC;MACtBjC,cAAc,CAACkC,GAAG,CAAC;MACnBhC,UAAU,CAACiC,GAAG,CAAC;IACjB,CAAC,CAAC,CACDC,KAAK,CAAEC,GAAG,IAAK;MACdC,OAAO,CAACC,KAAK,CAAC,yBAAyB,EAAEF,GAAG,CAAC;MAC7CV,SAAS,CAAC,yCAAyC,EAAE,QAAQ,CAAC;IAChE,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMa,kBAAkB,GAAIC,CAAC,IAAK;IAChChD,UAAU,CAAEiD,CAAC,KAAM;MAAE,GAAGA,CAAC;MAAE,CAACD,CAAC,CAACE,MAAM,CAACC,IAAI,GAAGH,CAAC,CAACE,MAAM,CAACE;IAAM,CAAC,CAAC,CAAC;EAChE,CAAC;EAED,MAAMC,YAAY,GAAG,MAAOL,CAAC,IAAK;IAChCA,CAAC,CAACM,cAAc,CAAC,CAAC;IAClBzC,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF,MAAM0C,IAAI,GAAG,MAAM/E,aAAa,CAACuB,OAAO,CAAC;MACzCY,UAAU,CAAC4C,IAAI,CAAC;MAEhB,IAAIA,IAAI,CAACC,MAAM,KAAK,CAAC,EAAE;QACrBtB,SAAS,CACP,yDAAyD,EACzD,SACF,CAAC;QACDnB,gBAAgB,CAAC,CAAC,CAAC,CAAC;QACpB;MACF;;MAEA;MACA,MAAM0C,QAAQ,GAAG,CAAC,CAAC;MACnB,MAAMC,OAAO,CAACC,GAAG,CACfJ,IAAI,CAACK,GAAG,CAAC,MAAOC,GAAG,IAAK;QACtB,MAAMC,KAAK,GAAG,MAAMpF,iBAAiB,CAACmF,GAAG,CAACE,UAAU,CAAC;QACrDN,QAAQ,CAACI,GAAG,CAACE,UAAU,CAAC,GAAGD,KAAK;MAClC,CAAC,CACH,CAAC;MACD/C,gBAAgB,CAAC0C,QAAQ,CAAC;MAC1BvB,SAAS,CAAC,kBAAkBqB,IAAI,CAACC,MAAM,sBAAsB,EAAE,SAAS,CAAC;IAC3E,CAAC,CAAC,OAAOZ,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,yBAAyB,EAAEF,GAAG,CAAC;MAC7CV,SAAS,CAACU,GAAG,CAACjB,OAAO,IAAI,yBAAyB,EAAE,QAAQ,CAAC;IAC/D,CAAC,SAAS;MACRd,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMmD,SAAS,GAAGA,CAACC,MAAM,EAAEC,IAAI,KAAK;IAClC/C,iBAAiB,CAAC8C,MAAM,CAAC;IACzB5C,YAAY,CAAC6C,IAAI,CAAC;IAClBjD,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;EAED,MAAMkD,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC,IAAI,CAAC/C,SAAS,EAAE;MACdc,SAAS,CAAC,mCAAmC,EAAE,SAAS,CAAC;MACzD;IACF;;IAEA;IACAE,gBAAgB,CAAC;MACfL,KAAK,EAAE,uBAAuB;MAC9BC,IAAI,EAAE,2DACJd,cAAc,aAAdA,cAAc,uBAAdA,cAAc,CAAEkD,MAAM,YACZ,IAAIC,IAAI,CAACjD,SAAS,CAAC,CAACkD,cAAc,CAAC,CAAC,GAAG;MACnDrC,SAAS,EAAEA,CAAA,KAAMsC,kBAAkB,CAAC;IACtC,CAAC,CAAC;EACJ,CAAC;EAED,MAAMA,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACrC,IAAI;MAAA,IAAAC,qBAAA;MACF,MAAM/F,iBAAiB,CAAC;QACtBgG,WAAW,EAAE3E,IAAI,CAACiE,UAAU;QAC5BW,SAAS,EAAExD,cAAc,CAAC6C,UAAU;QACpCY,UAAU,EAAEvD,SAAS;QACrBwD,mBAAmB,EAAEtD,UAAU;QAC/BnB,aAAa,EAAE,EAAAqE,qBAAA,GAAAtD,cAAc,CAAC2D,YAAY,cAAAL,qBAAA,uBAA3BA,qBAAA,CAA6BrE,aAAa,KAAI;MAC/D,CAAC,CAAC;MACF+B,SAAS,CACP,0EAA0E,EAC1E,SACF,CAAC;MACDjB,YAAY,CAAC,KAAK,CAAC;;MAEnB;MACA,MAAM6D,YAAY,GAAG,MAAMpG,iBAAiB,CAACwC,cAAc,CAAC6C,UAAU,CAAC;MACvEhD,gBAAgB,CAAEgE,IAAI,KAAM;QAC1B,GAAGA,IAAI;QACP,CAAC7D,cAAc,CAAC6C,UAAU,GAAGe;MAC/B,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,OAAOlC,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAEF,GAAG,CAAC;MAC3CV,SAAS,CACPU,GAAG,CAACjB,OAAO,IAAI,+CAA+C,EAC9D,QACF,CAAC;IACH;EACF,CAAC;EAED,oBACElC,OAAA,CAAAE,SAAA;IAAAqF,QAAA,gBAEEvF,OAAA,CAACX,WAAW;MACV4C,IAAI,EAAEF,KAAK,CAACE,IAAK;MACjBC,OAAO,EAAEH,KAAK,CAACG,OAAQ;MACvBC,OAAO,EAAEJ,KAAK,CAACI,OAAQ;MACvBqD,OAAO,EAAEA,CAAA,KAAMxD,QAAQ,CAAC;QAAEC,IAAI,EAAE,KAAK;QAAEC,OAAO,EAAE,EAAE;QAAEC,OAAO,EAAE;MAAO,CAAC;IAAE;MAAAsD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxE,CAAC,eAGF5F,OAAA,CAACV,WAAW;MACV2C,IAAI,EAAEG,KAAK,CAACH,IAAK;MACjBK,KAAK,EAAEF,KAAK,CAACE,KAAM;MACnBC,IAAI,EAAEH,KAAK,CAACG,IAAK;MACjBC,SAAS,EAAEI,kBAAmB;MAC9BiD,QAAQ,EAAEhD;IAAkB;MAAA4C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B,CAAC,eAEF5F,OAAA;MAAK8F,SAAS,EAAC,YAAY;MAAAP,QAAA,gBACzBvF,OAAA,CAACb,SAAS;QAAAsG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACb5F,OAAA;QAAK8F,SAAS,EAAC,aAAa;QAAAP,QAAA,eAC1BvF,OAAA,CAACT,SAAS;UAACuG,SAAS,EAAC,yBAAyB;UAAAP,QAAA,gBAC5CvF,OAAA,CAACR,IAAI;YAACuG,QAAQ,EAAEnC,YAAa;YAAA2B,QAAA,eAC3BvF,OAAA,CAACP,GAAG;cAACqG,SAAS,EAAC,KAAK;cAAAP,QAAA,gBAElBvF,OAAA,CAACN,GAAG;gBAACsG,EAAE;gBAAAT,QAAA,eACLvF,OAAA,CAACR,IAAI,CAACyG,MAAM;kBACVvC,IAAI,EAAC,cAAc;kBACnBC,KAAK,EAAErD,OAAO,CAACE,YAAa;kBAC5B0F,QAAQ,EAAE5C,kBAAmB;kBAC7BwC,SAAS,EAAC,gBAAgB;kBAAAP,QAAA,gBAE1BvF,OAAA;oBAAQ2D,KAAK,EAAC,EAAE;oBAAA4B,QAAA,EAAC;kBAAkB;oBAAAE,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CAAC,EAC3CjF,cAAc,CAACwD,GAAG,CAAEgC,EAAE,iBACrBnG,OAAA;oBAAiB2D,KAAK,EAAEwC,EAAG;oBAAAZ,QAAA,EACxBY;kBAAE,GADQA,EAAE;oBAAAV,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAEP,CACT,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACS;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACX,CAAC,eAGN5F,OAAA,CAACN,GAAG;gBAACsG,EAAE;gBAAAT,QAAA,eACLvF,OAAA,CAACR,IAAI,CAACyG,MAAM;kBACVvC,IAAI,EAAC,WAAW;kBAChBC,KAAK,EAAErD,OAAO,CAACG,SAAU;kBACzByF,QAAQ,EAAE5C,kBAAmB;kBAC7BwC,SAAS,EAAC,gBAAgB;kBAAAP,QAAA,gBAE1BvF,OAAA;oBAAQ2D,KAAK,EAAC,EAAE;oBAAA4B,QAAA,EAAC;kBAAe;oBAAAE,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CAAC,EACxC/E,WAAW,CAACsD,GAAG,CAAEiC,GAAG,iBACnBpG,OAAA;oBAAkB2D,KAAK,EAAEyC,GAAI;oBAAAb,QAAA,EAC1Ba;kBAAG,GADOA,GAAG;oBAAAX,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAER,CACT,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACS;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACX,CAAC,eAGN5F,OAAA,CAACN,GAAG;gBAACsG,EAAE;gBAAAT,QAAA,eACLvF,OAAA,CAACR,IAAI,CAACyG,MAAM;kBACVvC,IAAI,EAAC,eAAe;kBACpBC,KAAK,EAAErD,OAAO,CAACI,aAAc;kBAC7BwF,QAAQ,EAAE5C,kBAAmB;kBAC7BwC,SAAS,EAAC,gBAAgB;kBAAAP,QAAA,gBAE1BvF,OAAA;oBAAQ2D,KAAK,EAAC,EAAE;oBAAA4B,QAAA,EAAC;kBAAmB;oBAAAE,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CAAC,EAC5C7E,OAAO,CAACoD,GAAG,CAAEkC,EAAE,iBACdrG,OAAA;oBAAiB2D,KAAK,EAAE0C,EAAG;oBAAAd,QAAA,EACxBc;kBAAE,GADQA,EAAE;oBAAAZ,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAEP,CACT,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACS;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACX,CAAC,eAEN5F,OAAA,CAACN,GAAG;gBAACsG,EAAE,EAAC,MAAM;gBAAAT,QAAA,eACZvF,OAAA,CAACJ,MAAM;kBAAC0G,IAAI,EAAC,QAAQ;kBAACC,QAAQ,EAAEpF,OAAQ;kBAAAoE,QAAA,EACrCpE,OAAO,gBACNnB,OAAA,CAACH,OAAO;oBAAC2G,SAAS,EAAC,QAAQ;oBAACC,IAAI,EAAC;kBAAI;oBAAAhB,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAE,CAAC,GAExC;gBACD;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACK;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACN,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF,CAAC,eAEP5F,OAAA,CAACP,GAAG;YAACqG,SAAS,EAAC,UAAU;YAAAP,QAAA,EACtBtE,OAAO,CAACkD,GAAG,CAAEC,GAAG;cAAA,IAAAsC,iBAAA,EAAAC,kBAAA,EAAAC,qBAAA;cAAA,oBACf5G,OAAA,CAACN,GAAG;gBAAsBmH,EAAE,EAAE,EAAG;gBAACb,EAAE,EAAE,CAAE;gBAACc,EAAE,EAAE,CAAE;gBAAAvB,QAAA,eAC7CvF,OAAA,CAACL,IAAI;kBAACmG,SAAS,EAAC,OAAO;kBAAAP,QAAA,eACrBvF,OAAA,CAACL,IAAI,CAACoH,IAAI;oBAAAxB,QAAA,gBACRvF,OAAA,CAACL,IAAI,CAACqH,KAAK;sBAAAzB,QAAA,EAAEnB,GAAG,CAACO;oBAAM;sBAAAc,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAa,CAAC,eACrC5F,OAAA,CAACL,IAAI,CAACsH,IAAI;sBAAA1B,QAAA,gBACRvF,OAAA;wBAAAuF,QAAA,EAAQ;sBAAa;wBAAAE,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAQ,CAAC,EAAC,GAAG,GAAAc,iBAAA,GACjCtC,GAAG,CAACgB,YAAY,cAAAsB,iBAAA,uBAAhBA,iBAAA,CAAkBlG,YAAY,eAC/BR,OAAA;wBAAAyF,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAK,CAAC,eACN5F,OAAA;wBAAAuF,QAAA,EAAQ;sBAAU;wBAAAE,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAQ,CAAC,EAAC,GAAG,GAAAe,kBAAA,GAC9BvC,GAAG,CAACgB,YAAY,cAAAuB,kBAAA,uBAAhBA,kBAAA,CAAkBlG,SAAS;oBAAA;sBAAAgF,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACnB,CAAC,eAGZ5F,OAAA;sBAAKkH,KAAK,EAAE;wBAAEC,SAAS,EAAE,GAAG;wBAAEC,SAAS,EAAE;sBAAO,CAAE;sBAAA7B,QAAA,EAC/C,EAAAqB,qBAAA,GAAAvF,aAAa,CAAC+C,GAAG,CAACE,UAAU,CAAC,cAAAsC,qBAAA,uBAA7BA,qBAAA,CAA+B7C,MAAM,IAAG,CAAC,GACxC1C,aAAa,CAAC+C,GAAG,CAACE,UAAU,CAAC,CAACH,GAAG,CAAEM,IAAI,iBACrCzE,OAAA;wBAEE8F,SAAS,EAAC,wDAAwD;wBAAAP,QAAA,gBAElEvF,OAAA;0BAAAuF,QAAA,EAAQ,IAAIX,IAAI,CAACH,IAAI,CAAC,CAACI,cAAc,CAAC;wBAAC;0BAAAY,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OAAQ,CAAC,eAChD5F,OAAA,CAACJ,MAAM;0BACL6G,IAAI,EAAC,IAAI;0BACTY,OAAO,EAAEA,CAAA,KAAM9C,SAAS,CAACH,GAAG,EAAEK,IAAI,CAAE;0BAAAc,QAAA,EACrC;wBAED;0BAAAE,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OAAQ,CAAC;sBAAA,GATJnB,IAAI;wBAAAgB,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAUN,CACN,CAAC,gBAEF5F,OAAA;wBAAG8F,SAAS,EAAC,YAAY;wBAAAP,QAAA,EAAC;sBAE1B;wBAAAE,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAG;oBACJ;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACE,CAAC;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACG;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACR;cAAC,GApCCxB,GAAG,CAACE,UAAU;gBAAAmB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAqCnB,CAAC;YAAA,CACP;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,eAGN5F,OAAA,CAACF,KAAK;YAACmC,IAAI,EAAEV,SAAU;YAAC+F,MAAM,EAAEA,CAAA,KAAM9F,YAAY,CAAC,KAAK,CAAE;YAAA+D,QAAA,gBACxDvF,OAAA,CAACF,KAAK,CAACyH,MAAM;cAACC,WAAW;cAAAjC,QAAA,eACvBvF,OAAA,CAACF,KAAK,CAACkH,KAAK;gBAAAzB,QAAA,GAAC,cAAY,EAAC9D,cAAc,aAAdA,cAAc,uBAAdA,cAAc,CAAEkD,MAAM;cAAA;gBAAAc,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAc;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACnD,CAAC,eACf5F,OAAA,CAACF,KAAK,CAACiH,IAAI;cAAAxB,QAAA,gBACTvF,OAAA,CAACR,IAAI,CAACiI,KAAK;gBAAC3B,SAAS,EAAC,MAAM;gBAAAP,QAAA,gBAC1BvF,OAAA,CAACR,IAAI,CAACkI,KAAK;kBAAAnC,QAAA,EAAC;gBAAY;kBAAAE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAY,CAAC,eACrC5F,OAAA,CAACR,IAAI,CAACmI,OAAO;kBACXrB,IAAI,EAAC,MAAM;kBACXsB,QAAQ;kBACRjE,KAAK,EAAE,IAAIiB,IAAI,CAACjD,SAAS,CAAC,CAACkD,cAAc,CAAC;gBAAE;kBAAAY,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC7C,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACQ,CAAC,eACb5F,OAAA,CAACR,IAAI,CAACiI,KAAK;gBAAC3B,SAAS,EAAC,MAAM;gBAAAP,QAAA,gBAC1BvF,OAAA,CAACR,IAAI,CAACkI,KAAK;kBAAAnC,QAAA,EAAC;gBAAsB;kBAAAE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAY,CAAC,eAC/C5F,OAAA,CAACR,IAAI,CAACyG,MAAM;kBACVtC,KAAK,EAAE9B,UAAW;kBAClBqE,QAAQ,EAAG3C,CAAC,IAAKzB,aAAa,CAACyB,CAAC,CAACE,MAAM,CAACE,KAAK,CAAE;kBAAA4B,QAAA,gBAE/CvF,OAAA;oBAAQ2D,KAAK,EAAC,OAAO;oBAAA4B,QAAA,EAAC;kBAAK;oBAAAE,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CAAC,eACpC5F,OAAA;oBAAQ2D,KAAK,EAAC,KAAK;oBAAA4B,QAAA,EAAC;kBAAG;oBAAAE,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CAAC,eAChC5F,OAAA;oBAAQ2D,KAAK,EAAC,OAAO;oBAAA4B,QAAA,EAAC;kBAAW;oBAAAE,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC/B,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACJ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC,eACb5F,OAAA,CAACF,KAAK,CAACV,MAAM;cAAAmG,QAAA,gBACXvF,OAAA,CAACJ,MAAM;gBAACuC,OAAO,EAAC,WAAW;gBAACkF,OAAO,EAAEA,CAAA,KAAM7F,YAAY,CAAC,KAAK,CAAE;gBAAA+D,QAAA,EAAC;cAEhE;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eACT5F,OAAA,CAACJ,MAAM;gBAACuC,OAAO,EAAC,SAAS;gBAACkF,OAAO,EAAE3C,iBAAkB;gBAAAa,QAAA,EAAC;cAEtD;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACG,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACV,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eACN5F,OAAA,CAACZ,MAAM;QAAAqG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC;EAAA,eACN,CAAC;AAEP;AAACxF,EAAA,CAnVuBD,SAAS;AAAA0H,EAAA,GAAT1H,SAAS;AAAA,IAAA0H,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
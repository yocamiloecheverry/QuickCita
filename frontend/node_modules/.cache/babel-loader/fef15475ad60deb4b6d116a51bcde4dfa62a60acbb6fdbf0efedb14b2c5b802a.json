{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dae01\\\\Documents\\\\Universidad\\\\QuickCita\\\\frontend\\\\src\\\\components\\\\PrivateRoute.js\",\n  _s = $RefreshSig$();\n// frontend/src/components/PrivateRoute.js\nimport React, { useContext } from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { AuthContext } from '../context/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PrivateRoute({\n  children,\n  roles = []\n}) {\n  _s();\n  const {\n    isAuthenticated,\n    user\n  } = useContext(AuthContext);\n\n  // 1) Si no está autenticado, lo mandamos al login\n  if (!isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 12\n    }, this);\n  }\n\n  // 2) Si hay roles definidos y el rol del usuario NO coincide,\n  //    lo mandamos a la página pública (Home)\n  if (roles.length > 0 && (!user || !roles.includes(user.rol))) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 12\n    }, this);\n  }\n\n  // 3) Si pasa todas las comprobaciones, renderizamos el children\n  return children;\n}\n_s(PrivateRoute, \"COqImUGpkN3Vyz0GbxPCPNJel14=\");\n_c = PrivateRoute;\nvar _c;\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["React","useContext","Navigate","AuthContext","jsxDEV","_jsxDEV","PrivateRoute","children","roles","_s","isAuthenticated","user","to","replace","fileName","_jsxFileName","lineNumber","columnNumber","length","includes","rol","_c","$RefreshReg$"],"sources":["C:/Users/dae01/Documents/Universidad/QuickCita/frontend/src/components/PrivateRoute.js"],"sourcesContent":["// frontend/src/components/PrivateRoute.js\r\nimport React, { useContext } from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { AuthContext } from '../context/AuthContext';\r\n\r\nexport default function PrivateRoute({ children, roles = [] }) {\r\n  const { isAuthenticated, user } = useContext(AuthContext);\r\n\r\n  // 1) Si no está autenticado, lo mandamos al login\r\n  if (!isAuthenticated) {\r\n    return <Navigate to=\"/login\" replace />;\r\n  }\r\n\r\n  // 2) Si hay roles definidos y el rol del usuario NO coincide,\r\n  //    lo mandamos a la página pública (Home)\r\n  if (roles.length > 0 && (!user || !roles.includes(user.rol))) {\r\n    return <Navigate to=\"/\" replace />;\r\n  }\r\n\r\n  // 3) Si pasa todas las comprobaciones, renderizamos el children\r\n  return children;\r\n}\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,WAAW,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,eAAe,SAASC,YAAYA,CAAC;EAAEC,QAAQ;EAAEC,KAAK,GAAG;AAAG,CAAC,EAAE;EAAAC,EAAA;EAC7D,MAAM;IAAEC,eAAe;IAAEC;EAAK,CAAC,GAAGV,UAAU,CAACE,WAAW,CAAC;;EAEzD;EACA,IAAI,CAACO,eAAe,EAAE;IACpB,oBAAOL,OAAA,CAACH,QAAQ;MAACU,EAAE,EAAC,QAAQ;MAACC,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACzC;;EAEA;EACA;EACA,IAAIT,KAAK,CAACU,MAAM,GAAG,CAAC,KAAK,CAACP,IAAI,IAAI,CAACH,KAAK,CAACW,QAAQ,CAACR,IAAI,CAACS,GAAG,CAAC,CAAC,EAAE;IAC5D,oBAAOf,OAAA,CAACH,QAAQ;MAACU,EAAE,EAAC,GAAG;MAACC,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACpC;;EAEA;EACA,OAAOV,QAAQ;AACjB;AAACE,EAAA,CAhBuBH,YAAY;AAAAe,EAAA,GAAZf,YAAY;AAAA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
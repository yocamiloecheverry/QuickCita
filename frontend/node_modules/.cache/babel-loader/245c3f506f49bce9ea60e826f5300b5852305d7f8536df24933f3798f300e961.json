{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dae01\\\\Documents\\\\Universidad\\\\QuickCita\\\\frontend\\\\src\\\\pages\\\\Register.js\",\n  _s = $RefreshSig$();\n// src/pages/Register.js\nimport React, { useState } from \"react\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport { registerUser, loginUser } from \"../services/authService\"; // ‚Üê importamos loginUser\nimport styled from \"styled-components\";\nimport { InputGroup, Form } from \"react-bootstrap\";\n\n// Regex para validar contrase√±a\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\W).{8,}$/;\nconst Container = styled.div`\n  max-width: 400px;\n  margin: 3rem auto;\n  padding: 2rem;\n  background: white;\n  border-radius: 8px;\n  box-shadow: 0 2px 8px rgba(0,0,0,0.1);\n`;\n_c = Container;\nconst Title = styled.h2`\n  text-align: center;\n  margin-bottom: 1.5rem;\n`;\n_c2 = Title;\nconst StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n`;\n_c3 = StyledForm;\nconst Input = styled(Form.Control)`\n  margin-bottom: 1rem;\n  padding: 0.5rem;\n  font-size: 1rem;\n`;\n_c4 = Input;\nconst StyledSelect = styled(Form.Select)`\n  margin-bottom: 1rem;\n  padding: 0.5rem;\n  font-size: 1rem;\n`;\n_c5 = StyledSelect;\nconst StyledButton = styled.button`\n  padding: 0.75rem;\n  font-size: 1rem;\n  background: #007bff;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  &:hover { background: #0056b3; }\n`;\n_c6 = StyledButton;\nconst SuccessMessage = styled.div`\n  margin-bottom: 1rem;\n  padding: 0.75rem;\n  text-align: center;\n  color: #155724;\n  background: #d4edda;\n  border: 1px solid #c3e6cb;\n  border-radius: 4px;\n`;\n_c7 = SuccessMessage;\nconst ErrorMessage = styled.div`\n  margin-bottom: 1rem;\n  padding: 0.75rem;\n  text-align: center;\n  color: #721c24;\n  background: #f8d7da;\n  border: 1px solid #f5c6cb;\n  border-radius: 4px;\n`;\n_c8 = ErrorMessage;\nconst EyeToggle = styled(InputGroup.Text)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0.5rem;\n  background: white;\n  border-left: 0;\n  border-top-right-radius: .25rem;\n  border-bottom-right-radius: .25rem;\n  cursor: pointer;\n`;\n_c9 = EyeToggle;\nconst PasswordField = styled(Form.Control)`\n  border-top-right-radius: 0;\n  border-bottom-right-radius: 0;\n`;\n_c0 = PasswordField;\nexport default function Register() {\n  _s();\n  const navigate = useNavigate();\n\n  // datos del registro nuevo\n  const [form, setForm] = useState({\n    nombre: \"\",\n    email: \"\",\n    telefono: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n    red_social: \"\",\n    rol: \"paciente\"\n  });\n\n  // credenciales del admin existente\n  const [adminCreds, setAdminCreds] = useState({\n    adminEmail: \"\",\n    adminPassword: \"\"\n  });\n  const [success, setSuccess] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [submitting, setSubmitting] = useState(false);\n  const [showPassword, setShowPassword] = useState(false);\n  const [showConfirm, setShowConfirm] = useState(false);\n  const onChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (name === \"adminEmail\" || name === \"adminPassword\") {\n      setAdminCreds(c => ({\n        ...c,\n        [name]: value\n      }));\n    } else {\n      setForm(f => ({\n        ...f,\n        [name]: value\n      }));\n    }\n    setError(\"\");\n  };\n  const onSubmit = async e => {\n    e.preventDefault();\n    setError(\"\");\n\n    // 1) Validar contrase√±a\n    if (!passwordRegex.test(form.password)) {\n      setError(\"La contrase√±a debe tener m√≠nimo 8 caracteres, al menos una may√∫scula, una min√∫scula y un car√°cter especial.\");\n      return;\n    }\n    if (form.password !== form.confirmPassword) {\n      setError(\"La confirmaci√≥n de contrase√±a no coincide.\");\n      return;\n    }\n    setSubmitting(true);\n\n    // 2) Si quieren crear un Admin, primero autenticamos al Admin existente\n    if (form.rol === \"administrador\") {\n      if (!adminCreds.adminEmail || !adminCreds.adminPassword) {\n        setError(\"Debes ingresar email y contrase√±a de un Administrador existente.\");\n        setSubmitting(false);\n        return;\n      }\n      try {\n        // loginUser lanza error si falla\n        await loginUser({\n          email: adminCreds.adminEmail,\n          password: adminCreds.adminPassword\n        });\n      } catch (err) {\n        setError(err.message || \"Autenticaci√≥n de Admin fallida.\");\n        setSubmitting(false);\n        return;\n      }\n    }\n\n    // 3) Ya validado (o rol != admin), procedemos a registrar\n    try {\n      await registerUser({\n        nombre: form.nombre,\n        email: form.email,\n        telefono: form.telefono,\n        password: form.password,\n        red_social: form.red_social,\n        rol: form.rol\n      });\n      setSuccess(\"Registro creado con √©xito. En breve ser√°s redirigido al inicio de sesi√≥n...\");\n      setTimeout(() => navigate(\"/login\", {\n        replace: true\n      }), 3000);\n    } catch (err) {\n      setError(err.message || \"Ocurri√≥ un error al registrar.\");\n      setSubmitting(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      children: \"Registro de Usuario\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 17\n    }, this), success && /*#__PURE__*/_jsxDEV(SuccessMessage, {\n      children: success\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 19\n    }, this), !success && /*#__PURE__*/_jsxDEV(StyledForm, {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        name: \"nombre\",\n        placeholder: \"Nombre completo\",\n        value: form.nombre,\n        onChange: onChange,\n        disabled: submitting,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        name: \"email\",\n        type: \"email\",\n        placeholder: \"Correo electr\\xF3nico\",\n        value: form.email,\n        onChange: onChange,\n        disabled: submitting,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        name: \"telefono\",\n        placeholder: \"Tel\\xE9fono\",\n        value: form.telefono,\n        onChange: onChange,\n        disabled: submitting,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(PasswordField, {\n          type: showPassword ? \"text\" : \"password\",\n          name: \"password\",\n          placeholder: \"Contrase\\xF1a\",\n          value: form.password,\n          onChange: onChange,\n          disabled: submitting,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(EyeToggle, {\n          onClick: () => setShowPassword(v => !v),\n          children: showPassword ? \"üôà\" : \"üëÅÔ∏è\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(PasswordField, {\n          type: showConfirm ? \"text\" : \"password\",\n          name: \"confirmPassword\",\n          placeholder: \"Confirmar contrase\\xF1a\",\n          value: form.confirmPassword,\n          onChange: onChange,\n          disabled: submitting,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(EyeToggle, {\n          onClick: () => setShowConfirm(v => !v),\n          children: showConfirm ? \"üôà\" : \"üëÅÔ∏è\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        name: \"red_social\",\n        placeholder: \"Red social (opcional)\",\n        value: form.red_social,\n        onChange: onChange,\n        disabled: submitting\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(StyledSelect, {\n        name: \"rol\",\n        value: form.rol,\n        onChange: onChange,\n        disabled: submitting,\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"paciente\",\n          children: \"Paciente\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"medico\",\n          children: \"M\\xE9dico\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"administrador\",\n          children: \"Administrador\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 11\n      }, this), form.rol === \"administrador\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          name: \"adminEmail\",\n          type: \"email\",\n          placeholder: \"Admin existente: Email\",\n          value: adminCreds.adminEmail,\n          onChange: onChange,\n          disabled: submitting,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          name: \"adminPassword\",\n          type: \"password\",\n          placeholder: \"Admin existente: Contrase\\xF1a\",\n          value: adminCreds.adminPassword,\n          onChange: onChange,\n          disabled: submitting,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(StyledButton, {\n        type: \"submit\",\n        disabled: submitting,\n        children: submitting ? \"Procesando...\" : \"Registrarse\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        marginTop: '1rem',\n        textAlign: 'center'\n      },\n      children: [\"\\xBFYa tienes una cuenta? \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/login\",\n        children: \"Inicia sesi\\xF3n aqu\\xED\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 175,\n    columnNumber: 5\n  }, this);\n}\n\n// import React, { useState } from \"react\";\n// import { useNavigate, Link } from \"react-router-dom\";\n// import { registerUser, loginUser } from \"../services/authService\";\n// import {\n//   Container,\n//   Row,\n//   Col,\n//   Card,\n//   Form,\n//   Button,\n//   InputGroup,\n//   Alert,\n// } from \"react-bootstrap\";\n// import { FaEye, FaEyeSlash, FaUserPlus } from \"react-icons/fa\";\n// import registerImg from \"../images/medical-hero-image-1024x576.jpg\"; // Agrega una imagen aqu√≠\n// import \"../styles/Auth.css\";\n\n// // Regex para validar contrase√±a\n// const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\W).{8,}$/;\n\n// export default function Register() {\n//   const navigate = useNavigate();\n\n//   // datos del registro nuevo\n//   const [form, setForm] = useState({\n//     nombre: \"\",\n//     email: \"\",\n//     telefono: \"\",\n//     password: \"\",\n//     confirmPassword: \"\",\n//     red_social: \"\",\n//     rol: \"paciente\",\n//   });\n\n//   // credenciales del admin existente\n//   const [adminCreds, setAdminCreds] = useState({\n//     adminEmail: \"\",\n//     adminPassword: \"\",\n//   });\n\n//   const [success, setSuccess] = useState(\"\");\n//   const [error, setError] = useState(\"\");\n//   const [submitting, setSubmitting] = useState(false);\n//   const [showPassword, setShowPassword] = useState(false);\n//   const [showConfirm, setShowConfirm] = useState(false);\n//   const [showAdminPassword, setShowAdminPassword] = useState(false);\n\n//   const onChange = (e) => {\n//     const { name, value } = e.target;\n//     if (name === \"adminEmail\" || name === \"adminPassword\") {\n//       setAdminCreds((c) => ({ ...c, [name]: value }));\n//     } else {\n//       setForm((f) => ({ ...f, [name]: value }));\n//     }\n//     setError(\"\");\n//   };\n\n//   const onSubmit = async (e) => {\n//     e.preventDefault();\n//     setError(\"\");\n\n//     // 1) Validar contrase√±a\n//     if (!passwordRegex.test(form.password)) {\n//       setError(\n//         \"La contrase√±a debe tener m√≠nimo 8 caracteres, al menos una may√∫scula, una min√∫scula y un car√°cter especial.\"\n//       );\n//       return;\n//     }\n//     if (form.password !== form.confirmPassword) {\n//       setError(\"La confirmaci√≥n de contrase√±a no coincide.\");\n//       return;\n//     }\n\n//     setSubmitting(true);\n\n//     // 2) Si quieren crear un Admin, primero autenticamos al Admin existente\n//     if (form.rol === \"administrador\") {\n//       if (!adminCreds.adminEmail || !adminCreds.adminPassword) {\n//         setError(\n//           \"Debes ingresar email y contrase√±a de un Administrador existente.\"\n//         );\n//         setSubmitting(false);\n//         return;\n//       }\n//       try {\n//         await loginUser({\n//           email: adminCreds.adminEmail,\n//           password: adminCreds.adminPassword,\n//         });\n//       } catch (err) {\n//         setError(err.message || \"Autenticaci√≥n de Admin fallida.\");\n//         setSubmitting(false);\n//         return;\n//       }\n//     }\n\n//     // 3) Ya validado (o rol != admin), procedemos a registrar\n//     try {\n//       await registerUser({\n//         nombre: form.nombre,\n//         email: form.email,\n//         telefono: form.telefono,\n//         password: form.password,\n//         red_social: form.red_social,\n//         rol: form.rol,\n//       });\n\n//       setSuccess(\n//         \"Registro creado con √©xito. En breve ser√°s redirigido al inicio de sesi√≥n...\"\n//       );\n//       setTimeout(() => navigate(\"/login\", { replace: true }), 3000);\n//     } catch (err) {\n//       setError(err.message || \"Ocurri√≥ un error al registrar.\");\n//       setSubmitting(false);\n//     }\n//   };\n\n//   return (\n//     <Container fluid className=\"auth-container\">\n//       <Container>\n//         <Row className=\"justify-content-center\">\n//           <Col lg={10} xl={8}>\n//             <Card className=\"auth-card\">\n//               <Row className=\"g-0\">\n//                 {/* Imagen lateral */}\n//                 <Col lg={5} className=\"auth-image d-none d-lg-flex\">\n//                   <img\n//                     src={registerImg}\n//                     alt=\"Registro QuickCita\"\n//                     className=\"img-fluid\"\n//                   />\n//                 </Col>\n\n//                 {/* Formulario */}\n//                 <Col lg={7}>\n//                   <div className=\"auth-form-container\">\n//                     <div className=\"text-center mb-4\">\n//                       <FaUserPlus size={48} className=\"text-primary mb-3\" />\n//                       <h2 className=\"auth-title\">Crear Cuenta</h2>\n//                       <p className=\"auth-subtitle\">\n//                         √önete a QuickCita y gestiona tus citas m√©dicas\n//                       </p>\n//                     </div>\n\n//                     {error && (\n//                       <Alert className=\"auth-alert auth-alert-danger\">\n//                         {error}\n//                       </Alert>\n//                     )}\n\n//                     {success && (\n//                       <Alert className=\"auth-alert auth-alert-success\">\n//                         {success}\n//                       </Alert>\n//                     )}\n\n//                     {!success && (\n//                       <Form onSubmit={onSubmit}>\n//                         <Row>\n//                           <Col md={6}>\n//                             <Form.Group className=\"mb-3\">\n//                               <Form.Control\n//                                 name=\"nombre\"\n//                                 placeholder=\"Nombre completo\"\n//                                 value={form.nombre}\n//                                 onChange={onChange}\n//                                 disabled={submitting}\n//                                 required\n//                                 className=\"modern-input\"\n//                               />\n//                             </Form.Group>\n//                           </Col>\n//                           <Col md={6}>\n//                             <Form.Group className=\"mb-3\">\n//                               <Form.Control\n//                                 name=\"telefono\"\n//                                 placeholder=\"Tel√©fono\"\n//                                 value={form.telefono}\n//                                 onChange={onChange}\n//                                 disabled={submitting}\n//                                 required\n//                                 className=\"modern-input\"\n//                               />\n//                             </Form.Group>\n//                           </Col>\n//                         </Row>\n\n//                         <Form.Group className=\"mb-3\">\n//                           <Form.Control\n//                             name=\"email\"\n//                             type=\"email\"\n//                             placeholder=\"Correo electr√≥nico\"\n//                             value={form.email}\n//                             onChange={onChange}\n//                             disabled={submitting}\n//                             required\n//                             className=\"modern-input\"\n//                           />\n//                         </Form.Group>\n\n//                         <Row>\n//                           <Col md={6}>\n//                             <Form.Group className=\"mb-3\">\n//                               <InputGroup>\n//                                 <Form.Control\n//                                   type={showPassword ? \"text\" : \"password\"}\n//                                   name=\"password\"\n//                                   placeholder=\"Contrase√±a\"\n//                                   value={form.password}\n//                                   onChange={onChange}\n//                                   disabled={submitting}\n//                                   required\n//                                   className=\"modern-input password-input\"\n//                                 />\n//                                 <InputGroup.Text\n//                                   className=\"password-toggle\"\n//                                   onClick={() => setShowPassword(!showPassword)}\n//                                 >\n//                                   {showPassword ? <FaEyeSlash /> : <FaEye />}\n//                                 </InputGroup.Text>\n//                               </InputGroup>\n//                             </Form.Group>\n//                           </Col>\n//                           <Col md={6}>\n//                             <Form.Group className=\"mb-3\">\n//                               <InputGroup>\n//                                 <Form.Control\n//                                   type={showConfirm ? \"text\" : \"password\"}\n//                                   name=\"confirmPassword\"\n//                                   placeholder=\"Confirmar contrase√±a\"\n//                                   value={form.confirmPassword}\n//                                   onChange={onChange}\n//                                   disabled={submitting}\n//                                   required\n//                                   className=\"modern-input password-input\"\n//                                 />\n//                                 <InputGroup.Text\n//                                   className=\"password-toggle\"\n//                                   onClick={() => setShowConfirm(!showConfirm)}\n//                                 >\n//                                   {showConfirm ? <FaEyeSlash /> : <FaEye />}\n//                                 </InputGroup.Text>\n//                               </InputGroup>\n//                             </Form.Group>\n//                           </Col>\n//                         </Row>\n\n//                         <Row>\n//                           <Col md={6}>\n//                             <Form.Group className=\"mb-3\">\n//                               <Form.Control\n//                                 name=\"red_social\"\n//                                 placeholder=\"Red social (opcional)\"\n//                                 value={form.red_social}\n//                                 onChange={onChange}\n//                                 disabled={submitting}\n//                                 className=\"modern-input\"\n//                               />\n//                             </Form.Group>\n//                           </Col>\n//                           <Col md={6}>\n//                             <Form.Group className=\"mb-3\">\n//                               <Form.Select\n//                                 name=\"rol\"\n//                                 value={form.rol}\n//                                 onChange={onChange}\n//                                 disabled={submitting}\n//                                 required\n//                                 className=\"modern-select\"\n//                               >\n//                                 <option value=\"paciente\">Paciente</option>\n//                                 <option value=\"medico\">M√©dico</option>\n//                                 <option value=\"administrador\">\n//                                   Administrador\n//                                 </option>\n//                               </Form.Select>\n//                             </Form.Group>\n//                           </Col>\n//                         </Row>\n\n//                         {form.rol === \"administrador\" && (\n//                           <div className=\"admin-section\">\n//                             <h6>Verificaci√≥n de Administrador</h6>\n//                             <Row>\n//                               <Col md={6}>\n//                                 <Form.Group className=\"mb-3\">\n//                                   <Form.Control\n//                                     name=\"adminEmail\"\n//                                     type=\"email\"\n//                                     placeholder=\"Email del admin existente\"\n//                                     value={adminCreds.adminEmail}\n//                                     onChange={onChange}\n//                                     disabled={submitting}\n//                                     required\n//                                     className=\"modern-input\"\n//                                   />\n//                                 </Form.Group>\n//                               </Col>\n//                               <Col md={6}>\n//                                 <Form.Group className=\"mb-3\">\n//                                   <InputGroup>\n//                                     <Form.Control\n//                                       type={\n//                                         showAdminPassword ? \"text\" : \"password\"\n//                                       }\n//                                       name=\"adminPassword\"\n//                                       placeholder=\"Contrase√±a del admin\"\n//                                       value={adminCreds.adminPassword}\n//                                       onChange={onChange}\n//                                       disabled={submitting}\n//                                       required\n//                                       className=\"modern-input password-input\"\n//                                     />\n//                                     <InputGroup.Text\n//                                       className=\"password-toggle\"\n//                                       onClick={() =>\n//                                         setShowAdminPassword(!showAdminPassword)\n//                                       }\n//                                     >\n//                                       {showAdminPassword ? (\n//                                         <FaEyeSlash />\n//                                       ) : (\n//                                         <FaEye />\n//                                       )}\n//                                     </InputGroup.Text>\n//                                   </InputGroup>\n//                                 </Form.Group>\n//                               </Col>\n//                             </Row>\n//                           </div>\n//                         )}\n\n//                         <Button\n//                           type=\"submit\"\n//                           disabled={submitting}\n//                           className=\"auth-btn auth-btn-primary w-100 mb-3\"\n//                         >\n//                           {submitting ? \"Procesando...\" : \"Crear Cuenta\"}\n//                         </Button>\n//                       </Form>\n//                     )}\n\n//                     <div className=\"text-center\">\n//                       <span className=\"text-muted\">\n//                         ¬øYa tienes una cuenta?{\" \"}\n//                       </span>\n//                       <Link to=\"/login\" className=\"auth-link\">\n//                         Inicia sesi√≥n aqu√≠\n//                       </Link>\n//                     </div>\n//                   </div>\n//                 </Col>\n//               </Row>\n//             </Card>\n//           </Col>\n//         </Row>\n//       </Container>\n//     </Container>\n//   );\n// }\n_s(Register, \"NhM1BrA94NbFdYTZ1zLsosSUOOg=\", false, function () {\n  return [useNavigate];\n});\n_c1 = Register;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c0, _c1;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Title\");\n$RefreshReg$(_c3, \"StyledForm\");\n$RefreshReg$(_c4, \"Input\");\n$RefreshReg$(_c5, \"StyledSelect\");\n$RefreshReg$(_c6, \"StyledButton\");\n$RefreshReg$(_c7, \"SuccessMessage\");\n$RefreshReg$(_c8, \"ErrorMessage\");\n$RefreshReg$(_c9, \"EyeToggle\");\n$RefreshReg$(_c0, \"PasswordField\");\n$RefreshReg$(_c1, \"Register\");","map":{"version":3,"names":["React","useState","useNavigate","Link","registerUser","loginUser","styled","InputGroup","Form","jsxDEV","_jsxDEV","Fragment","_Fragment","passwordRegex","Container","div","_c","Title","h2","_c2","StyledForm","_c3","Input","Control","_c4","StyledSelect","Select","_c5","StyledButton","button","_c6","SuccessMessage","_c7","ErrorMessage","_c8","EyeToggle","Text","_c9","PasswordField","_c0","Register","_s","navigate","form","setForm","nombre","email","telefono","password","confirmPassword","red_social","rol","adminCreds","setAdminCreds","adminEmail","adminPassword","success","setSuccess","error","setError","submitting","setSubmitting","showPassword","setShowPassword","showConfirm","setShowConfirm","onChange","e","name","value","target","c","f","onSubmit","preventDefault","test","err","message","setTimeout","replace","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","disabled","required","type","className","onClick","v","style","marginTop","textAlign","to","_c1","$RefreshReg$"],"sources":["C:/Users/dae01/Documents/Universidad/QuickCita/frontend/src/pages/Register.js"],"sourcesContent":["// src/pages/Register.js\r\nimport React, { useState } from \"react\";\r\nimport { useNavigate, Link } from \"react-router-dom\";\r\nimport { registerUser, loginUser } from \"../services/authService\"; // ‚Üê importamos loginUser\r\nimport styled from \"styled-components\";\r\nimport { InputGroup, Form } from \"react-bootstrap\";\r\n\r\n// Regex para validar contrase√±a\r\nconst passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\W).{8,}$/;\r\n\r\nconst Container = styled.div`\r\n  max-width: 400px;\r\n  margin: 3rem auto;\r\n  padding: 2rem;\r\n  background: white;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 8px rgba(0,0,0,0.1);\r\n`;\r\nconst Title = styled.h2`\r\n  text-align: center;\r\n  margin-bottom: 1.5rem;\r\n`;\r\nconst StyledForm = styled(Form)`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\nconst Input = styled(Form.Control)`\r\n  margin-bottom: 1rem;\r\n  padding: 0.5rem;\r\n  font-size: 1rem;\r\n`;\r\nconst StyledSelect = styled(Form.Select)`\r\n  margin-bottom: 1rem;\r\n  padding: 0.5rem;\r\n  font-size: 1rem;\r\n`;\r\nconst StyledButton = styled.button`\r\n  padding: 0.75rem;\r\n  font-size: 1rem;\r\n  background: #007bff;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  &:hover { background: #0056b3; }\r\n`;\r\nconst SuccessMessage = styled.div`\r\n  margin-bottom: 1rem;\r\n  padding: 0.75rem;\r\n  text-align: center;\r\n  color: #155724;\r\n  background: #d4edda;\r\n  border: 1px solid #c3e6cb;\r\n  border-radius: 4px;\r\n`;\r\nconst ErrorMessage = styled.div`\r\n  margin-bottom: 1rem;\r\n  padding: 0.75rem;\r\n  text-align: center;\r\n  color: #721c24;\r\n  background: #f8d7da;\r\n  border: 1px solid #f5c6cb;\r\n  border-radius: 4px;\r\n`;\r\n\r\nconst EyeToggle = styled(InputGroup.Text)`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 0.5rem;\r\n  background: white;\r\n  border-left: 0;\r\n  border-top-right-radius: .25rem;\r\n  border-bottom-right-radius: .25rem;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst PasswordField = styled(Form.Control)`\r\n  border-top-right-radius: 0;\r\n  border-bottom-right-radius: 0;\r\n`;\r\n\r\nexport default function Register() {\r\n  const navigate = useNavigate();\r\n\r\n  // datos del registro nuevo\r\n  const [form, setForm] = useState({\r\n    nombre: \"\",\r\n    email: \"\",\r\n    telefono: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n    red_social: \"\",\r\n    rol: \"paciente\",\r\n  });\r\n\r\n  // credenciales del admin existente\r\n  const [adminCreds, setAdminCreds] = useState({\r\n    adminEmail: \"\",\r\n    adminPassword: \"\"\r\n  });\r\n\r\n  const [success, setSuccess] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [submitting, setSubmitting] = useState(false);\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [showConfirm, setShowConfirm] = useState(false);\r\n\r\n  const onChange = e => {\r\n    const { name, value } = e.target;\r\n    if (name === \"adminEmail\" || name === \"adminPassword\") {\r\n      setAdminCreds(c => ({ ...c, [name]: value }));\r\n    } else {\r\n      setForm(f => ({ ...f, [name]: value }));\r\n    }\r\n    setError(\"\");\r\n  };\r\n\r\n  const onSubmit = async e => {\r\n    e.preventDefault();\r\n    setError(\"\");\r\n\r\n    // 1) Validar contrase√±a\r\n    if (!passwordRegex.test(form.password)) {\r\n      setError(\"La contrase√±a debe tener m√≠nimo 8 caracteres, al menos una may√∫scula, una min√∫scula y un car√°cter especial.\");\r\n      return;\r\n    }\r\n    if (form.password !== form.confirmPassword) {\r\n      setError(\"La confirmaci√≥n de contrase√±a no coincide.\");\r\n      return;\r\n    }\r\n\r\n    setSubmitting(true);\r\n\r\n    // 2) Si quieren crear un Admin, primero autenticamos al Admin existente\r\n    if (form.rol === \"administrador\") {\r\n      if (!adminCreds.adminEmail || !adminCreds.adminPassword) {\r\n        setError(\"Debes ingresar email y contrase√±a de un Administrador existente.\");\r\n        setSubmitting(false);\r\n        return;\r\n      }\r\n      try {\r\n        // loginUser lanza error si falla\r\n        await loginUser({\r\n          email: adminCreds.adminEmail,\r\n          password: adminCreds.adminPassword\r\n        });\r\n      } catch (err) {\r\n        setError(err.message || \"Autenticaci√≥n de Admin fallida.\");\r\n        setSubmitting(false);\r\n        return;\r\n      }\r\n    }\r\n\r\n    // 3) Ya validado (o rol != admin), procedemos a registrar\r\n    try {\r\n      await registerUser({\r\n        nombre: form.nombre,\r\n        email: form.email,\r\n        telefono: form.telefono,\r\n        password: form.password,\r\n        red_social: form.red_social,\r\n        rol: form.rol\r\n      });\r\n\r\n      setSuccess(\"Registro creado con √©xito. En breve ser√°s redirigido al inicio de sesi√≥n...\");\r\n      setTimeout(() => navigate(\"/login\", { replace: true }), 3000);\r\n    } catch (err) {\r\n      setError(err.message || \"Ocurri√≥ un error al registrar.\");\r\n      setSubmitting(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Title>Registro de Usuario</Title>\r\n      {error && <ErrorMessage>{error}</ErrorMessage>}\r\n      {success && <SuccessMessage>{success}</SuccessMessage>}\r\n\r\n      {!success && (\r\n        <StyledForm onSubmit={onSubmit}>\r\n          <Input\r\n            name=\"nombre\"\r\n            placeholder=\"Nombre completo\"\r\n            value={form.nombre}\r\n            onChange={onChange}\r\n            disabled={submitting}\r\n            required\r\n          />\r\n          <Input\r\n            name=\"email\"\r\n            type=\"email\"\r\n            placeholder=\"Correo electr√≥nico\"\r\n            value={form.email}\r\n            onChange={onChange}\r\n            disabled={submitting}\r\n            required\r\n          />\r\n          <Input\r\n            name=\"telefono\"\r\n            placeholder=\"Tel√©fono\"\r\n            value={form.telefono}\r\n            onChange={onChange}\r\n            disabled={submitting}\r\n            required\r\n          />\r\n\r\n          <InputGroup className=\"mb-3\">\r\n            <PasswordField\r\n              type={showPassword ? \"text\" : \"password\"}\r\n              name=\"password\"\r\n              placeholder=\"Contrase√±a\"\r\n              value={form.password}\r\n              onChange={onChange}\r\n              disabled={submitting}\r\n              required\r\n            />\r\n            <EyeToggle onClick={() => setShowPassword(v => !v)}>\r\n              {showPassword ? \"üôà\" : \"üëÅÔ∏è\"}\r\n            </EyeToggle>\r\n          </InputGroup>\r\n\r\n          <InputGroup className=\"mb-3\">\r\n            <PasswordField\r\n              type={showConfirm ? \"text\" : \"password\"}\r\n              name=\"confirmPassword\"\r\n              placeholder=\"Confirmar contrase√±a\"\r\n              value={form.confirmPassword}\r\n              onChange={onChange}\r\n              disabled={submitting}\r\n              required\r\n            />\r\n            <EyeToggle onClick={() => setShowConfirm(v => !v)}>\r\n              {showConfirm ? \"üôà\" : \"üëÅÔ∏è\"}\r\n            </EyeToggle>\r\n          </InputGroup>\r\n\r\n          <Input\r\n            name=\"red_social\"\r\n            placeholder=\"Red social (opcional)\"\r\n            value={form.red_social}\r\n            onChange={onChange}\r\n            disabled={submitting}\r\n          />\r\n\r\n          <StyledSelect\r\n            name=\"rol\"\r\n            value={form.rol}\r\n            onChange={onChange}\r\n            disabled={submitting}\r\n            required\r\n          >\r\n            <option value=\"paciente\">Paciente</option>\r\n            <option value=\"medico\">M√©dico</option>\r\n            <option value=\"administrador\">Administrador</option>\r\n          </StyledSelect>\r\n\r\n          {form.rol === \"administrador\" && (\r\n            <>\r\n              <hr />\r\n              <Input\r\n                name=\"adminEmail\"\r\n                type=\"email\"\r\n                placeholder=\"Admin existente: Email\"\r\n                value={adminCreds.adminEmail}\r\n                onChange={onChange}\r\n                disabled={submitting}\r\n                required\r\n              />\r\n              <Input\r\n                name=\"adminPassword\"\r\n                type=\"password\"\r\n                placeholder=\"Admin existente: Contrase√±a\"\r\n                value={adminCreds.adminPassword}\r\n                onChange={onChange}\r\n                disabled={submitting}\r\n                required\r\n              />\r\n            </>\r\n          )}\r\n\r\n          <StyledButton type=\"submit\" disabled={submitting}>\r\n            {submitting ? \"Procesando...\" : \"Registrarse\"}\r\n          </StyledButton>\r\n        </StyledForm>\r\n      )}\r\n\r\n      <p style={{ marginTop: '1rem', textAlign: 'center' }}>\r\n        ¬øYa tienes una cuenta? <Link to=\"/login\">Inicia sesi√≥n aqu√≠</Link>\r\n      </p>\r\n    </Container>\r\n  );\r\n}\r\n\r\n// import React, { useState } from \"react\";\r\n// import { useNavigate, Link } from \"react-router-dom\";\r\n// import { registerUser, loginUser } from \"../services/authService\";\r\n// import {\r\n//   Container,\r\n//   Row,\r\n//   Col,\r\n//   Card,\r\n//   Form,\r\n//   Button,\r\n//   InputGroup,\r\n//   Alert,\r\n// } from \"react-bootstrap\";\r\n// import { FaEye, FaEyeSlash, FaUserPlus } from \"react-icons/fa\";\r\n// import registerImg from \"../images/medical-hero-image-1024x576.jpg\"; // Agrega una imagen aqu√≠\r\n// import \"../styles/Auth.css\";\r\n\r\n// // Regex para validar contrase√±a\r\n// const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\W).{8,}$/;\r\n\r\n// export default function Register() {\r\n//   const navigate = useNavigate();\r\n\r\n//   // datos del registro nuevo\r\n//   const [form, setForm] = useState({\r\n//     nombre: \"\",\r\n//     email: \"\",\r\n//     telefono: \"\",\r\n//     password: \"\",\r\n//     confirmPassword: \"\",\r\n//     red_social: \"\",\r\n//     rol: \"paciente\",\r\n//   });\r\n\r\n//   // credenciales del admin existente\r\n//   const [adminCreds, setAdminCreds] = useState({\r\n//     adminEmail: \"\",\r\n//     adminPassword: \"\",\r\n//   });\r\n\r\n//   const [success, setSuccess] = useState(\"\");\r\n//   const [error, setError] = useState(\"\");\r\n//   const [submitting, setSubmitting] = useState(false);\r\n//   const [showPassword, setShowPassword] = useState(false);\r\n//   const [showConfirm, setShowConfirm] = useState(false);\r\n//   const [showAdminPassword, setShowAdminPassword] = useState(false);\r\n\r\n//   const onChange = (e) => {\r\n//     const { name, value } = e.target;\r\n//     if (name === \"adminEmail\" || name === \"adminPassword\") {\r\n//       setAdminCreds((c) => ({ ...c, [name]: value }));\r\n//     } else {\r\n//       setForm((f) => ({ ...f, [name]: value }));\r\n//     }\r\n//     setError(\"\");\r\n//   };\r\n\r\n//   const onSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     setError(\"\");\r\n\r\n//     // 1) Validar contrase√±a\r\n//     if (!passwordRegex.test(form.password)) {\r\n//       setError(\r\n//         \"La contrase√±a debe tener m√≠nimo 8 caracteres, al menos una may√∫scula, una min√∫scula y un car√°cter especial.\"\r\n//       );\r\n//       return;\r\n//     }\r\n//     if (form.password !== form.confirmPassword) {\r\n//       setError(\"La confirmaci√≥n de contrase√±a no coincide.\");\r\n//       return;\r\n//     }\r\n\r\n//     setSubmitting(true);\r\n\r\n//     // 2) Si quieren crear un Admin, primero autenticamos al Admin existente\r\n//     if (form.rol === \"administrador\") {\r\n//       if (!adminCreds.adminEmail || !adminCreds.adminPassword) {\r\n//         setError(\r\n//           \"Debes ingresar email y contrase√±a de un Administrador existente.\"\r\n//         );\r\n//         setSubmitting(false);\r\n//         return;\r\n//       }\r\n//       try {\r\n//         await loginUser({\r\n//           email: adminCreds.adminEmail,\r\n//           password: adminCreds.adminPassword,\r\n//         });\r\n//       } catch (err) {\r\n//         setError(err.message || \"Autenticaci√≥n de Admin fallida.\");\r\n//         setSubmitting(false);\r\n//         return;\r\n//       }\r\n//     }\r\n\r\n//     // 3) Ya validado (o rol != admin), procedemos a registrar\r\n//     try {\r\n//       await registerUser({\r\n//         nombre: form.nombre,\r\n//         email: form.email,\r\n//         telefono: form.telefono,\r\n//         password: form.password,\r\n//         red_social: form.red_social,\r\n//         rol: form.rol,\r\n//       });\r\n\r\n//       setSuccess(\r\n//         \"Registro creado con √©xito. En breve ser√°s redirigido al inicio de sesi√≥n...\"\r\n//       );\r\n//       setTimeout(() => navigate(\"/login\", { replace: true }), 3000);\r\n//     } catch (err) {\r\n//       setError(err.message || \"Ocurri√≥ un error al registrar.\");\r\n//       setSubmitting(false);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <Container fluid className=\"auth-container\">\r\n//       <Container>\r\n//         <Row className=\"justify-content-center\">\r\n//           <Col lg={10} xl={8}>\r\n//             <Card className=\"auth-card\">\r\n//               <Row className=\"g-0\">\r\n//                 {/* Imagen lateral */}\r\n//                 <Col lg={5} className=\"auth-image d-none d-lg-flex\">\r\n//                   <img\r\n//                     src={registerImg}\r\n//                     alt=\"Registro QuickCita\"\r\n//                     className=\"img-fluid\"\r\n//                   />\r\n//                 </Col>\r\n\r\n//                 {/* Formulario */}\r\n//                 <Col lg={7}>\r\n//                   <div className=\"auth-form-container\">\r\n//                     <div className=\"text-center mb-4\">\r\n//                       <FaUserPlus size={48} className=\"text-primary mb-3\" />\r\n//                       <h2 className=\"auth-title\">Crear Cuenta</h2>\r\n//                       <p className=\"auth-subtitle\">\r\n//                         √önete a QuickCita y gestiona tus citas m√©dicas\r\n//                       </p>\r\n//                     </div>\r\n\r\n//                     {error && (\r\n//                       <Alert className=\"auth-alert auth-alert-danger\">\r\n//                         {error}\r\n//                       </Alert>\r\n//                     )}\r\n\r\n//                     {success && (\r\n//                       <Alert className=\"auth-alert auth-alert-success\">\r\n//                         {success}\r\n//                       </Alert>\r\n//                     )}\r\n\r\n//                     {!success && (\r\n//                       <Form onSubmit={onSubmit}>\r\n//                         <Row>\r\n//                           <Col md={6}>\r\n//                             <Form.Group className=\"mb-3\">\r\n//                               <Form.Control\r\n//                                 name=\"nombre\"\r\n//                                 placeholder=\"Nombre completo\"\r\n//                                 value={form.nombre}\r\n//                                 onChange={onChange}\r\n//                                 disabled={submitting}\r\n//                                 required\r\n//                                 className=\"modern-input\"\r\n//                               />\r\n//                             </Form.Group>\r\n//                           </Col>\r\n//                           <Col md={6}>\r\n//                             <Form.Group className=\"mb-3\">\r\n//                               <Form.Control\r\n//                                 name=\"telefono\"\r\n//                                 placeholder=\"Tel√©fono\"\r\n//                                 value={form.telefono}\r\n//                                 onChange={onChange}\r\n//                                 disabled={submitting}\r\n//                                 required\r\n//                                 className=\"modern-input\"\r\n//                               />\r\n//                             </Form.Group>\r\n//                           </Col>\r\n//                         </Row>\r\n\r\n//                         <Form.Group className=\"mb-3\">\r\n//                           <Form.Control\r\n//                             name=\"email\"\r\n//                             type=\"email\"\r\n//                             placeholder=\"Correo electr√≥nico\"\r\n//                             value={form.email}\r\n//                             onChange={onChange}\r\n//                             disabled={submitting}\r\n//                             required\r\n//                             className=\"modern-input\"\r\n//                           />\r\n//                         </Form.Group>\r\n\r\n//                         <Row>\r\n//                           <Col md={6}>\r\n//                             <Form.Group className=\"mb-3\">\r\n//                               <InputGroup>\r\n//                                 <Form.Control\r\n//                                   type={showPassword ? \"text\" : \"password\"}\r\n//                                   name=\"password\"\r\n//                                   placeholder=\"Contrase√±a\"\r\n//                                   value={form.password}\r\n//                                   onChange={onChange}\r\n//                                   disabled={submitting}\r\n//                                   required\r\n//                                   className=\"modern-input password-input\"\r\n//                                 />\r\n//                                 <InputGroup.Text\r\n//                                   className=\"password-toggle\"\r\n//                                   onClick={() => setShowPassword(!showPassword)}\r\n//                                 >\r\n//                                   {showPassword ? <FaEyeSlash /> : <FaEye />}\r\n//                                 </InputGroup.Text>\r\n//                               </InputGroup>\r\n//                             </Form.Group>\r\n//                           </Col>\r\n//                           <Col md={6}>\r\n//                             <Form.Group className=\"mb-3\">\r\n//                               <InputGroup>\r\n//                                 <Form.Control\r\n//                                   type={showConfirm ? \"text\" : \"password\"}\r\n//                                   name=\"confirmPassword\"\r\n//                                   placeholder=\"Confirmar contrase√±a\"\r\n//                                   value={form.confirmPassword}\r\n//                                   onChange={onChange}\r\n//                                   disabled={submitting}\r\n//                                   required\r\n//                                   className=\"modern-input password-input\"\r\n//                                 />\r\n//                                 <InputGroup.Text\r\n//                                   className=\"password-toggle\"\r\n//                                   onClick={() => setShowConfirm(!showConfirm)}\r\n//                                 >\r\n//                                   {showConfirm ? <FaEyeSlash /> : <FaEye />}\r\n//                                 </InputGroup.Text>\r\n//                               </InputGroup>\r\n//                             </Form.Group>\r\n//                           </Col>\r\n//                         </Row>\r\n\r\n//                         <Row>\r\n//                           <Col md={6}>\r\n//                             <Form.Group className=\"mb-3\">\r\n//                               <Form.Control\r\n//                                 name=\"red_social\"\r\n//                                 placeholder=\"Red social (opcional)\"\r\n//                                 value={form.red_social}\r\n//                                 onChange={onChange}\r\n//                                 disabled={submitting}\r\n//                                 className=\"modern-input\"\r\n//                               />\r\n//                             </Form.Group>\r\n//                           </Col>\r\n//                           <Col md={6}>\r\n//                             <Form.Group className=\"mb-3\">\r\n//                               <Form.Select\r\n//                                 name=\"rol\"\r\n//                                 value={form.rol}\r\n//                                 onChange={onChange}\r\n//                                 disabled={submitting}\r\n//                                 required\r\n//                                 className=\"modern-select\"\r\n//                               >\r\n//                                 <option value=\"paciente\">Paciente</option>\r\n//                                 <option value=\"medico\">M√©dico</option>\r\n//                                 <option value=\"administrador\">\r\n//                                   Administrador\r\n//                                 </option>\r\n//                               </Form.Select>\r\n//                             </Form.Group>\r\n//                           </Col>\r\n//                         </Row>\r\n\r\n//                         {form.rol === \"administrador\" && (\r\n//                           <div className=\"admin-section\">\r\n//                             <h6>Verificaci√≥n de Administrador</h6>\r\n//                             <Row>\r\n//                               <Col md={6}>\r\n//                                 <Form.Group className=\"mb-3\">\r\n//                                   <Form.Control\r\n//                                     name=\"adminEmail\"\r\n//                                     type=\"email\"\r\n//                                     placeholder=\"Email del admin existente\"\r\n//                                     value={adminCreds.adminEmail}\r\n//                                     onChange={onChange}\r\n//                                     disabled={submitting}\r\n//                                     required\r\n//                                     className=\"modern-input\"\r\n//                                   />\r\n//                                 </Form.Group>\r\n//                               </Col>\r\n//                               <Col md={6}>\r\n//                                 <Form.Group className=\"mb-3\">\r\n//                                   <InputGroup>\r\n//                                     <Form.Control\r\n//                                       type={\r\n//                                         showAdminPassword ? \"text\" : \"password\"\r\n//                                       }\r\n//                                       name=\"adminPassword\"\r\n//                                       placeholder=\"Contrase√±a del admin\"\r\n//                                       value={adminCreds.adminPassword}\r\n//                                       onChange={onChange}\r\n//                                       disabled={submitting}\r\n//                                       required\r\n//                                       className=\"modern-input password-input\"\r\n//                                     />\r\n//                                     <InputGroup.Text\r\n//                                       className=\"password-toggle\"\r\n//                                       onClick={() =>\r\n//                                         setShowAdminPassword(!showAdminPassword)\r\n//                                       }\r\n//                                     >\r\n//                                       {showAdminPassword ? (\r\n//                                         <FaEyeSlash />\r\n//                                       ) : (\r\n//                                         <FaEye />\r\n//                                       )}\r\n//                                     </InputGroup.Text>\r\n//                                   </InputGroup>\r\n//                                 </Form.Group>\r\n//                               </Col>\r\n//                             </Row>\r\n//                           </div>\r\n//                         )}\r\n\r\n//                         <Button\r\n//                           type=\"submit\"\r\n//                           disabled={submitting}\r\n//                           className=\"auth-btn auth-btn-primary w-100 mb-3\"\r\n//                         >\r\n//                           {submitting ? \"Procesando...\" : \"Crear Cuenta\"}\r\n//                         </Button>\r\n//                       </Form>\r\n//                     )}\r\n\r\n//                     <div className=\"text-center\">\r\n//                       <span className=\"text-muted\">\r\n//                         ¬øYa tienes una cuenta?{\" \"}\r\n//                       </span>\r\n//                       <Link to=\"/login\" className=\"auth-link\">\r\n//                         Inicia sesi√≥n aqu√≠\r\n//                       </Link>\r\n//                     </div>\r\n//                   </div>\r\n//                 </Col>\r\n//               </Row>\r\n//             </Card>\r\n//           </Col>\r\n//         </Row>\r\n//       </Container>\r\n//     </Container>\r\n//   );\r\n// }\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"// import React, { useState, useContext } from \"react\";\n// import { useNavigate, Link } from \"react-router-dom\";\n// import { AuthContext } from \"../context/AuthContext\";\n// import { InputGroup } from \"react-bootstrap\";\n// import {\n//   Container,\n//   Card,\n//   Form,\n//   Button,\n//   Alert\n// } from \"react-bootstrap\";\n\n// export default function Login() {\n//   const { handleLogin } = useContext(AuthContext);\n//   const navigate = useNavigate();\n//   const [credentials, setCredentials] = useState({ email: \"\", password: \"\" });\n//   const [error, setError] = useState(\"\");\n//   const [loading, setLoading] = useState(false);\n//   const [showPassword, setShowPassword] = useState(false);\n\n//   const handleChange = e => {\n//     const { name, value } = e.target;\n//     setCredentials(prev => ({ ...prev, [name]: value }));\n//   };\n\n//   const handleSubmit = async e => {\n//     e.preventDefault();\n//     setError(\"\");\n//     setLoading(true);\n//     try {\n//       const decodedUser = await handleLogin(credentials);\n//       if (decodedUser.rol === \"administrador\") {\n//         navigate(\"/admin\", { replace: true });\n//       } else if (decodedUser.rol === \"medico\") {\n//         navigate(\"/medico\", { replace: true });\n//       } else {\n//         navigate(\"/dashboard\", { replace: true });\n//       }\n//     } catch (err) {\n//       setError(err.message || \"Error al iniciar sesión\");\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   return (\n//     <Container className=\"d-flex justify-content-center align-items-center vh-100 bg-light\">\n//       <Card style={{ maxWidth: '400px', width: '100%' }} className=\"shadow-sm\">\n//         <Card.Body>\n//           <Card.Title className=\"text-center mb-4\">Iniciar Sesión</Card.Title>\n//           {error && <Alert variant=\"danger\">{error}</Alert>}\n//           <Form onSubmit={handleSubmit}>\n//             <Form.Group className=\"mb-3\" controlId=\"formEmail\">\n//               <Form.Label>Correo electrónico</Form.Label>\n//               <Form.Control\n//                 type=\"email\"\n//                 placeholder=\"Ingresa tu email\"\n//                 name=\"email\"\n//                 value={credentials.email}\n//                 onChange={handleChange}\n//                 required\n//                 disabled={loading}\n//               />\n//             </Form.Group>\n\n//             <Form.Group className=\"mb-3\" controlId=\"formPassword\">\n//               <Form.Label>Contraseña</Form.Label>\n//               <InputGroup>\n//                 <Form.Control\n//                   type={showPassword ? \"text\" : \"password\"}\n//                   name=\"password\"\n//                   value={credentials.password}\n//                   onChange={handleChange}\n//                   required\n//                   disabled={loading}\n//                 />\n//                 <InputGroup.Text\n//                   style={{ cursor: \"pointer\" }}\n//                   onClick={() => setShowPassword(v => !v)}\n//                 >\n//                   {showPassword ? \"🙈\" : \"👁️\"}\n//                 </InputGroup.Text>\n//               </InputGroup>\n//             </Form.Group>\n\n//             <Button variant=\"primary\" type=\"submit\" className=\"w-100\" disabled={loading}>\n//               {loading ? 'Ingresando...' : 'Ingresar'}\n//             </Button>\n//           </Form>\n//           <div className=\"mt-3 text-center\">\n//             ¿No tienes una cuenta? <Link to=\"/register\">Regístrate aquí</Link>\n//           </div>\n//         </Card.Body>\n//       </Card>\n//     </Container>\n//   );\n// }","map":{"version":3,"names":[],"sources":["C:/Users/dae01/Documents/Universidad/QuickCita/frontend/src/pages/Login.js"],"sourcesContent":["// import React, { useState, useContext } from \"react\";\r\n// import { useNavigate, Link } from \"react-router-dom\";\r\n// import { AuthContext } from \"../context/AuthContext\";\r\n// import { InputGroup } from \"react-bootstrap\";\r\n// import {\r\n//   Container,\r\n//   Card,\r\n//   Form,\r\n//   Button,\r\n//   Alert\r\n// } from \"react-bootstrap\";\r\n\r\n// export default function Login() {\r\n//   const { handleLogin } = useContext(AuthContext);\r\n//   const navigate = useNavigate();\r\n//   const [credentials, setCredentials] = useState({ email: \"\", password: \"\" });\r\n//   const [error, setError] = useState(\"\");\r\n//   const [loading, setLoading] = useState(false);\r\n//   const [showPassword, setShowPassword] = useState(false);\r\n\r\n//   const handleChange = e => {\r\n//     const { name, value } = e.target;\r\n//     setCredentials(prev => ({ ...prev, [name]: value }));\r\n//   };\r\n\r\n//   const handleSubmit = async e => {\r\n//     e.preventDefault();\r\n//     setError(\"\");\r\n//     setLoading(true);\r\n//     try {\r\n//       const decodedUser = await handleLogin(credentials);\r\n//       if (decodedUser.rol === \"administrador\") {\r\n//         navigate(\"/admin\", { replace: true });\r\n//       } else if (decodedUser.rol === \"medico\") {\r\n//         navigate(\"/medico\", { replace: true });\r\n//       } else {\r\n//         navigate(\"/dashboard\", { replace: true });\r\n//       }\r\n//     } catch (err) {\r\n//       setError(err.message || \"Error al iniciar sesión\");\r\n//     } finally {\r\n//       setLoading(false);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <Container className=\"d-flex justify-content-center align-items-center vh-100 bg-light\">\r\n//       <Card style={{ maxWidth: '400px', width: '100%' }} className=\"shadow-sm\">\r\n//         <Card.Body>\r\n//           <Card.Title className=\"text-center mb-4\">Iniciar Sesión</Card.Title>\r\n//           {error && <Alert variant=\"danger\">{error}</Alert>}\r\n//           <Form onSubmit={handleSubmit}>\r\n//             <Form.Group className=\"mb-3\" controlId=\"formEmail\">\r\n//               <Form.Label>Correo electrónico</Form.Label>\r\n//               <Form.Control\r\n//                 type=\"email\"\r\n//                 placeholder=\"Ingresa tu email\"\r\n//                 name=\"email\"\r\n//                 value={credentials.email}\r\n//                 onChange={handleChange}\r\n//                 required\r\n//                 disabled={loading}\r\n//               />\r\n//             </Form.Group>\r\n\r\n//             <Form.Group className=\"mb-3\" controlId=\"formPassword\">\r\n//               <Form.Label>Contraseña</Form.Label>\r\n//               <InputGroup>\r\n//                 <Form.Control\r\n//                   type={showPassword ? \"text\" : \"password\"}\r\n//                   name=\"password\"\r\n//                   value={credentials.password}\r\n//                   onChange={handleChange}\r\n//                   required\r\n//                   disabled={loading}\r\n//                 />\r\n//                 <InputGroup.Text\r\n//                   style={{ cursor: \"pointer\" }}\r\n//                   onClick={() => setShowPassword(v => !v)}\r\n//                 >\r\n//                   {showPassword ? \"🙈\" : \"👁️\"}\r\n//                 </InputGroup.Text>\r\n//               </InputGroup>\r\n//             </Form.Group>\r\n\r\n//             <Button variant=\"primary\" type=\"submit\" className=\"w-100\" disabled={loading}>\r\n//               {loading ? 'Ingresando...' : 'Ingresar'}\r\n//             </Button>\r\n//           </Form>\r\n//           <div className=\"mt-3 text-center\">\r\n//             ¿No tienes una cuenta? <Link to=\"/register\">Regístrate aquí</Link>\r\n//           </div>\r\n//         </Card.Body>\r\n//       </Card>\r\n//     </Container>\r\n//   );\r\n// }\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}